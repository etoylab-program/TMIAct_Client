




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace GlobalC2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool ReqPing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqPing;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqPing, Common.ReqPing);
}

public bool ReqPing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqPing;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqPing, Common.ReqPing);
}
public bool ReqLogOnCreditKey(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.Guid _creditKey)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLogOnCreditKey;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _creditKey);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLogOnCreditKey, Common.ReqLogOnCreditKey);
}

public bool ReqLogOnCreditKey(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.Guid _creditKey)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLogOnCreditKey;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _creditKey);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLogOnCreditKey, Common.ReqLogOnCreditKey);
}
public bool ReqLogOut(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLogOut;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLogOut, Common.ReqLogOut);
}

public bool ReqLogOut(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLogOut;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLogOut, Common.ReqLogOut);
}
public bool ReqGetTotlaRelocateCntToNotComplete(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGetTotlaRelocateCntToNotComplete;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGetTotlaRelocateCntToNotComplete, Common.ReqGetTotlaRelocateCntToNotComplete);
}

public bool ReqGetTotlaRelocateCntToNotComplete(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGetTotlaRelocateCntToNotComplete;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGetTotlaRelocateCntToNotComplete, Common.ReqGetTotlaRelocateCntToNotComplete);
}
public bool ReqRelocateUserInfoSet(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRelocateUserInfoSet;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRelocateUserInfoSet, Common.ReqRelocateUserInfoSet);
}

public bool ReqRelocateUserInfoSet(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRelocateUserInfoSet;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRelocateUserInfoSet, Common.ReqRelocateUserInfoSet);
}
public bool ReqRelocateUserComplate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRelocateUserComplate;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRelocateUserComplate, Common.ReqRelocateUserComplate);
}

public bool ReqRelocateUserComplate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRelocateUserComplate;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRelocateUserComplate, Common.ReqRelocateUserComplate);
}
public bool ReqRefrashUserInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRefrashUserInfo;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRefrashUserInfo, Common.ReqRefrashUserInfo);
}

public bool ReqRefrashUserInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRefrashUserInfo;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRefrashUserInfo, Common.ReqRefrashUserInfo);
}
public bool ReqReConnectUserInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoReconnectUserInfoReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqReConnectUserInfo;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqReConnectUserInfo, Common.ReqReConnectUserInfo);
}

public bool ReqReConnectUserInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoReconnectUserInfoReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqReConnectUserInfo;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqReConnectUserInfo, Common.ReqReConnectUserInfo);
}
public bool ReqAccountCode(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAccountCode;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAccountCode, Common.ReqAccountCode);
}

public bool ReqAccountCode(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAccountCode;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAccountCode, Common.ReqAccountCode);
}
public bool ReqAccountSetPassword(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAccountSetPassword;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAccountSetPassword, Common.ReqAccountSetPassword);
}

public bool ReqAccountSetPassword(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAccountSetPassword;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAccountSetPassword, Common.ReqAccountSetPassword);
}
public bool ReqAccountCodeReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAccountCodeReward;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAccountCodeReward, Common.ReqAccountCodeReward);
}

public bool ReqAccountCodeReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAccountCodeReward;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAccountCodeReward, Common.ReqAccountCodeReward);
}
public bool ReqAccountLinkReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAccountLinkReward;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAccountLinkReward, Common.ReqAccountLinkReward);
}

public bool ReqAccountLinkReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAccountLinkReward;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAccountLinkReward, Common.ReqAccountLinkReward);
}
public bool ReqLinkAccountList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLinkAccountList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLinkAccountList, Common.ReqLinkAccountList);
}

public bool ReqLinkAccountList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLinkAccountList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLinkAccountList, Common.ReqLinkAccountList);
}
public bool ReqAddLinkAccountAuth(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAddLinkAccountAuth;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAddLinkAccountAuth, Common.ReqAddLinkAccountAuth);
}

public bool ReqAddLinkAccountAuth(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAddLinkAccountAuth;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAddLinkAccountAuth, Common.ReqAddLinkAccountAuth);
}
public bool ReqGetUserInfoFromAccountLink(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserInfoFromLinkReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGetUserInfoFromAccountLink;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGetUserInfoFromAccountLink, Common.ReqGetUserInfoFromAccountLink);
}

public bool ReqGetUserInfoFromAccountLink(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserInfoFromLinkReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGetUserInfoFromAccountLink;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGetUserInfoFromAccountLink, Common.ReqGetUserInfoFromAccountLink);
}
public bool ReqPushNotifiTokenSet(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPushNotiSetToken _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqPushNotifiTokenSet;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqPushNotifiTokenSet, Common.ReqPushNotifiTokenSet);
}

public bool ReqPushNotifiTokenSet(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPushNotiSetToken _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqPushNotifiTokenSet;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqPushNotifiTokenSet, Common.ReqPushNotifiTokenSet);
}
public bool ReqReflashLoginBonus(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqReflashLoginBonus;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqReflashLoginBonus, Common.ReqReflashLoginBonus);
}

public bool ReqReflashLoginBonus(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqReflashLoginBonus;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqReflashLoginBonus, Common.ReqReflashLoginBonus);
}
public bool ReqRewardTakeAchieve(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardTakeAchieve;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardTakeAchieve, Common.ReqRewardTakeAchieve);
}

public bool ReqRewardTakeAchieve(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardTakeAchieve;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardTakeAchieve, Common.ReqRewardTakeAchieve);
}
public bool ReqRewardTakeAchieveEvent(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardTakeAchieveEvent;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardTakeAchieveEvent, Common.ReqRewardTakeAchieveEvent);
}

public bool ReqRewardTakeAchieveEvent(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardTakeAchieveEvent;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardTakeAchieveEvent, Common.ReqRewardTakeAchieveEvent);
}
public bool ReqRewardDailyMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdDailyMissionReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardDailyMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardDailyMission, Common.ReqRewardDailyMission);
}

public bool ReqRewardDailyMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdDailyMissionReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardDailyMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardDailyMission, Common.ReqRewardDailyMission);
}
public bool ReqRewardWeekMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoComRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardWeekMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardWeekMission, Common.ReqRewardWeekMission);
}

public bool ReqRewardWeekMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoComRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardWeekMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardWeekMission, Common.ReqRewardWeekMission);
}
public bool ReqRewardInfluMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoComRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardInfluMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardInfluMission, Common.ReqRewardInfluMission);
}

public bool ReqRewardInfluMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoComRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardInfluMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardInfluMission, Common.ReqRewardInfluMission);
}
public bool ReqUpdateGllaMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUpdateGllaMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUpdateGllaMission, Common.ReqUpdateGllaMission);
}

public bool ReqUpdateGllaMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUpdateGllaMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUpdateGllaMission, Common.ReqUpdateGllaMission);
}
public bool ReqRewardGllaMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardGllaMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardGllaMission, Common.ReqRewardGllaMission);
}

public bool ReqRewardGllaMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardGllaMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardGllaMission, Common.ReqRewardGllaMission);
}
public bool ReqRewardPassMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardPassMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardPassMission, Common.ReqRewardPassMission);
}

public bool ReqRewardPassMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardPassMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardPassMission, Common.ReqRewardPassMission);
}
public bool ReqRewardPass(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRewardPass;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRewardPass, Common.ReqRewardPass);
}

public bool ReqRewardPass(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRewardPass;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRewardPass, Common.ReqRewardPass);
}
public bool ReqEventRewardReset(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _eventID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEventRewardReset;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _eventID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEventRewardReset, Common.ReqEventRewardReset);
}

public bool ReqEventRewardReset(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _eventID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEventRewardReset;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _eventID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEventRewardReset, Common.ReqEventRewardReset);
}
public bool ReqEventRewardTake(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEventRewardTake;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEventRewardTake, Common.ReqEventRewardTake);
}

public bool ReqEventRewardTake(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEventRewardTake;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEventRewardTake, Common.ReqEventRewardTake);
}
public bool ReqEventLgnRewardTake(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEvtLgnRwdReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEventLgnRewardTake;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEventLgnRewardTake, Common.ReqEventLgnRewardTake);
}

public bool ReqEventLgnRewardTake(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEvtLgnRwdReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEventLgnRewardTake;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEventLgnRewardTake, Common.ReqEventLgnRewardTake);
}
public bool ReqSetTutorialVal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tutoVal)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetTutorialVal;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _tutoVal);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetTutorialVal, Common.ReqSetTutorialVal);
}

public bool ReqSetTutorialVal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tutoVal)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetTutorialVal;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _tutoVal);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetTutorialVal, Common.ReqSetTutorialVal);
}
public bool ReqSetTutorialFlag(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _tutoFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetTutorialFlag;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _tutoFlag);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetTutorialFlag, Common.ReqSetTutorialFlag);
}

public bool ReqSetTutorialFlag(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _tutoFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetTutorialFlag;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _tutoFlag);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetTutorialFlag, Common.ReqSetTutorialFlag);
}
public bool ReqAddCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _charTID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAddCharacter;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _charTID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAddCharacter, Common.ReqAddCharacter);
}

public bool ReqAddCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _charTID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAddCharacter;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _charTID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAddCharacter, Common.ReqAddCharacter);
}
public bool ReqChangePreferenceNum(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqChangePreferenceNum;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqChangePreferenceNum, Common.ReqChangePreferenceNum);
}

public bool ReqChangePreferenceNum(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqChangePreferenceNum;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqChangePreferenceNum, Common.ReqChangePreferenceNum);
}
public bool ReqChangeMainChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqChangeMainChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqChangeMainChar, Common.ReqChangeMainChar);
}

public bool ReqChangeMainChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqChangeMainChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqChangeMainChar, Common.ReqChangeMainChar);
}
public bool ReqGradeUpChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _cuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGradeUpChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _cuid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGradeUpChar, Common.ReqGradeUpChar);
}

public bool ReqGradeUpChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _cuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGradeUpChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _cuid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGradeUpChar, Common.ReqGradeUpChar);
}
public bool ReqSetMainCostumeChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharSetMainCostumeReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetMainCostumeChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetMainCostumeChar, Common.ReqSetMainCostumeChar);
}

public bool ReqSetMainCostumeChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharSetMainCostumeReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetMainCostumeChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetMainCostumeChar, Common.ReqSetMainCostumeChar);
}
public bool ReqRandomCostumeDyeing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _costumeID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRandomCostumeDyeing;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _costumeID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRandomCostumeDyeing, Common.ReqRandomCostumeDyeing);
}

public bool ReqRandomCostumeDyeing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _costumeID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRandomCostumeDyeing;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _costumeID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRandomCostumeDyeing, Common.ReqRandomCostumeDyeing);
}
public bool ReqSetCostumeDyeing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoSetCostumeDyeingReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetCostumeDyeing;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetCostumeDyeing, Common.ReqSetCostumeDyeing);
}

public bool ReqSetCostumeDyeing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoSetCostumeDyeingReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetCostumeDyeing;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetCostumeDyeing, Common.ReqSetCostumeDyeing);
}
public bool ReqCostumeDyeingLock(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCostumeDyeingLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCostumeDyeingLock;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCostumeDyeingLock, Common.ReqCostumeDyeingLock);
}

public bool ReqCostumeDyeingLock(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCostumeDyeingLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCostumeDyeingLock;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCostumeDyeingLock, Common.ReqCostumeDyeingLock);
}
public bool ReqUserCostumeColor(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _costumeID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUserCostumeColor;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _costumeID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUserCostumeColor, Common.ReqUserCostumeColor);
}

public bool ReqUserCostumeColor(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _costumeID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUserCostumeColor;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _costumeID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUserCostumeColor, Common.ReqUserCostumeColor);
}
public bool ReqEquipWeaponChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharEquipWeapon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEquipWeaponChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEquipWeaponChar, Common.ReqEquipWeaponChar);
}

public bool ReqEquipWeaponChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharEquipWeapon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEquipWeaponChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEquipWeaponChar, Common.ReqEquipWeaponChar);
}
public bool ReqApplySkillInChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharSlotSkill _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplySkillInChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplySkillInChar, Common.ReqApplySkillInChar);
}

public bool ReqApplySkillInChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharSlotSkill _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplySkillInChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplySkillInChar, Common.ReqApplySkillInChar);
}
public bool ReqLvUpSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoSkillLvUpReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLvUpSkill;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLvUpSkill, Common.ReqLvUpSkill);
}

public bool ReqLvUpSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoSkillLvUpReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLvUpSkill;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLvUpSkill, Common.ReqLvUpSkill);
}
public bool ReqLvUpUserSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklLvUpReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLvUpUserSkill;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLvUpUserSkill, Common.ReqLvUpUserSkill);
}

public bool ReqLvUpUserSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklLvUpReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLvUpUserSkill;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLvUpUserSkill, Common.ReqLvUpUserSkill);
}
public bool ReqResetUserSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqResetUserSkill;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqResetUserSkill, Common.ReqResetUserSkill);
}

public bool ReqResetUserSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqResetUserSkill;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqResetUserSkill, Common.ReqResetUserSkill);
}
public bool ReqGivePresentChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGivePresentCharReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGivePresentChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGivePresentChar, Common.ReqGivePresentChar);
}

public bool ReqGivePresentChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGivePresentCharReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGivePresentChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGivePresentChar, Common.ReqGivePresentChar);
}
public bool ReqResetSecretCntChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqResetSecretCntChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqResetSecretCntChar, Common.ReqResetSecretCntChar);
}

public bool ReqResetSecretCntChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqResetSecretCntChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqResetSecretCntChar, Common.ReqResetSecretCntChar);
}
public bool ReqRaidHPRestore(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRestoreHPReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidHPRestore;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidHPRestore, Common.ReqRaidHPRestore);
}

public bool ReqRaidHPRestore(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRestoreHPReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidHPRestore;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidHPRestore, Common.ReqRaidHPRestore);
}
public bool ReqStageStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqStageStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqStageStart, Common.ReqStageStart);
}

public bool ReqStageStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqStageStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqStageStart, Common.ReqStageStart);
}
public bool ReqStageEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameResultReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqStageEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqStageEnd, Common.ReqStageEnd);
}

public bool ReqStageEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameResultReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqStageEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqStageEnd, Common.ReqStageEnd);
}
public bool ReqStageEndFail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameEndFail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqStageEndFail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqStageEndFail, Common.ReqStageEndFail);
}

public bool ReqStageEndFail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameEndFail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqStageEndFail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqStageEndFail, Common.ReqStageEndFail);
}
public bool ReqStageContinue(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqStageContinue;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqStageContinue, Common.ReqStageContinue);
}

public bool ReqStageContinue(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqStageContinue;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqStageContinue, Common.ReqStageContinue);
}
public bool ReqRaidStageDrop(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidStageDrop _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidStageDrop;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidStageDrop, Common.ReqRaidStageDrop);
}

public bool ReqRaidStageDrop(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidStageDrop _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidStageDrop;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidStageDrop, Common.ReqRaidStageDrop);
}
public bool ReqBookNewConfirm(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBookNewConfirm _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqBookNewConfirm;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqBookNewConfirm, Common.ReqBookNewConfirm);
}

public bool ReqBookNewConfirm(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBookNewConfirm _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqBookNewConfirm;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqBookNewConfirm, Common.ReqBookNewConfirm);
}
public bool ReqTimeAtkRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqTimeAtkRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqTimeAtkRankingList, Common.ReqTimeAtkRankingList);
}

public bool ReqTimeAtkRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqTimeAtkRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqTimeAtkRankingList, Common.ReqTimeAtkRankingList);
}
public bool ReqTimeAtkRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqTimeAtkRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqTimeAtkRankerDetail, Common.ReqTimeAtkRankerDetail);
}

public bool ReqTimeAtkRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqTimeAtkRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqTimeAtkRankerDetail, Common.ReqTimeAtkRankerDetail);
}
public bool ReqInitRaidSeasonData(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqInitRaidSeasonData;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqInitRaidSeasonData, Common.ReqInitRaidSeasonData);
}

public bool ReqInitRaidSeasonData(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqInitRaidSeasonData;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqInitRaidSeasonData, Common.ReqInitRaidSeasonData);
}
public bool ReqRaidRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidRankingList, Common.ReqRaidRankingList);
}

public bool ReqRaidRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidRankingList, Common.ReqRaidRankingList);
}
public bool ReqRaidRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidRankerDetail, Common.ReqRaidRankerDetail);
}

public bool ReqRaidRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidRankerDetail, Common.ReqRaidRankerDetail);
}
public bool ReqRaidFirstRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidFirstRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidFirstRankingList, Common.ReqRaidFirstRankingList);
}

public bool ReqRaidFirstRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankingHeader _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidFirstRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidFirstRankingList, Common.ReqRaidFirstRankingList);
}
public bool ReqRaidFirstRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqRaidFirstRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqRaidFirstRankerDetail, Common.ReqRaidFirstRankerDetail);
}

public bool ReqRaidFirstRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqRaidFirstRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqRaidFirstRankerDetail, Common.ReqRaidFirstRankerDetail);
}
public bool ReqSetRaidTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserRaidTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetRaidTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetRaidTeam, Common.ReqSetRaidTeam);
}

public bool ReqSetRaidTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserRaidTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetRaidTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetRaidTeam, Common.ReqSetRaidTeam);
}
public bool ReqArenaSeasonPlay(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaSeasonPlay;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaSeasonPlay, Common.ReqArenaSeasonPlay);
}

public bool ReqArenaSeasonPlay(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaSeasonPlay;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaSeasonPlay, Common.ReqArenaSeasonPlay);
}
public bool ReqSetArenaTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetArenaTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetArenaTeam, Common.ReqSetArenaTeam);
}

public bool ReqSetArenaTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetArenaTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetArenaTeam, Common.ReqSetArenaTeam);
}
public bool ReqArenaGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaGameStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaGameStart, Common.ReqArenaGameStart);
}

public bool ReqArenaGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaGameStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaGameStart, Common.ReqArenaGameStart);
}
public bool ReqArenaGameEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameEndReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaGameEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaGameEnd, Common.ReqArenaGameEnd);
}

public bool ReqArenaGameEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameEndReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaGameEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaGameEnd, Common.ReqArenaGameEnd);
}
public bool ReqArenaEnemySearch(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaEnemySearch;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaEnemySearch, Common.ReqArenaEnemySearch);
}

public bool ReqArenaEnemySearch(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaEnemySearch;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaEnemySearch, Common.ReqArenaEnemySearch);
}
public bool ReqArenaRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _updateTM)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _updateTM);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaRankingList, Common.ReqArenaRankingList);
}

public bool ReqArenaRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _updateTM)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _updateTM);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaRankingList, Common.ReqArenaRankingList);
}
public bool ReqArenaRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _uuid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaRankerDetail, Common.ReqArenaRankerDetail);
}

public bool ReqArenaRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _uuid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaRankerDetail, Common.ReqArenaRankerDetail);
}
public bool ReqSetArenaTowerTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetArenaTowerTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetArenaTowerTeam, Common.ReqSetArenaTowerTeam);
}

public bool ReqSetArenaTowerTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetArenaTowerTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetArenaTowerTeam, Common.ReqSetArenaTowerTeam);
}
public bool ReqArenaTowerGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaTowerGameStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaTowerGameStart, Common.ReqArenaTowerGameStart);
}

public bool ReqArenaTowerGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameStartReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaTowerGameStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaTowerGameStart, Common.ReqArenaTowerGameStart);
}
public bool ReqArenaTowerGameEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameEndReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqArenaTowerGameEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqArenaTowerGameEnd, Common.ReqArenaTowerGameEnd);
}

public bool ReqArenaTowerGameEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameEndReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqArenaTowerGameEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqArenaTowerGameEnd, Common.ReqArenaTowerGameEnd);
}
public bool ReqUnexpectedPackageDailyReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackageDailyRewardReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUnexpectedPackageDailyReward;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUnexpectedPackageDailyReward, Common.ReqUnexpectedPackageDailyReward);
}

public bool ReqUnexpectedPackageDailyReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackageDailyRewardReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUnexpectedPackageDailyReward;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUnexpectedPackageDailyReward, Common.ReqUnexpectedPackageDailyReward);
}
public bool ReqCharLvUnexpectedPackageHardOpen(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _cuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCharLvUnexpectedPackageHardOpen;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _cuid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCharLvUnexpectedPackageHardOpen, Common.ReqCharLvUnexpectedPackageHardOpen);
}

public bool ReqCharLvUnexpectedPackageHardOpen(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _cuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCharLvUnexpectedPackageHardOpen;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _cuid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCharLvUnexpectedPackageHardOpen, Common.ReqCharLvUnexpectedPackageHardOpen);
}
public bool ReqAccountDelete(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAccountDelete;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAccountDelete, Common.ReqAccountDelete);
}

public bool ReqAccountDelete(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAccountDelete;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAccountDelete, Common.ReqAccountDelete);
}
public bool ReqGetUserPresetList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGetUserPresetList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGetUserPresetList, Common.ReqGetUserPresetList);
}

public bool ReqGetUserPresetList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGetUserPresetList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGetUserPresetList, Common.ReqGetUserPresetList);
}
public bool ReqAddOrUpdateUserPreset(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktAddOrUpdatePreset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAddOrUpdateUserPreset;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAddOrUpdateUserPreset, Common.ReqAddOrUpdateUserPreset);
}

public bool ReqAddOrUpdateUserPreset(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktAddOrUpdatePreset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAddOrUpdateUserPreset;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAddOrUpdateUserPreset, Common.ReqAddOrUpdateUserPreset);
}
public bool ReqUserPresetLoad(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUserPresetLoad;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUserPresetLoad, Common.ReqUserPresetLoad);
}

public bool ReqUserPresetLoad(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUserPresetLoad;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUserPresetLoad, Common.ReqUserPresetLoad);
}
public bool ReqUserPresetChangeName(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUserPresetChangeName;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUserPresetChangeName, Common.ReqUserPresetChangeName);
}

public bool ReqUserPresetChangeName(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPresetCommon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUserPresetChangeName;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUserPresetChangeName, Common.ReqUserPresetChangeName);
}
public bool ReqCircleOpen(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleOpenReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleOpen;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleOpen, Common.ReqCircleOpen);
}

public bool ReqCircleOpen(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleOpenReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleOpen;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleOpen, Common.ReqCircleOpen);
}
public bool ReqSuggestCircleList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _lang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSuggestCircleList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _lang);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSuggestCircleList, Common.ReqSuggestCircleList);
}

public bool ReqSuggestCircleList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _lang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSuggestCircleList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _lang);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSuggestCircleList, Common.ReqSuggestCircleList);
}
public bool ReqCircleJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleJoinReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleJoin;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleJoin, Common.ReqCircleJoin);
}

public bool ReqCircleJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleJoinReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleJoin;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleJoin, Common.ReqCircleJoin);
}
public bool ReqCircleJoinCancel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _circleID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleJoinCancel;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _circleID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleJoinCancel, Common.ReqCircleJoinCancel);
}

public bool ReqCircleJoinCancel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _circleID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleJoinCancel;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _circleID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleJoinCancel, Common.ReqCircleJoinCancel);
}
public bool ReqCircleLobbyInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleLobbyInfo;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleLobbyInfo, Common.ReqCircleLobbyInfo);
}

public bool ReqCircleLobbyInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleLobbyInfo;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleLobbyInfo, Common.ReqCircleLobbyInfo);
}
public bool ReqCircleWithdrawal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleWithdrawal;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleWithdrawal, Common.ReqCircleWithdrawal);
}

public bool ReqCircleWithdrawal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleWithdrawal;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleWithdrawal, Common.ReqCircleWithdrawal);
}
public bool ReqCircleDisperse(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleDisperse;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleDisperse, Common.ReqCircleDisperse);
}

public bool ReqCircleDisperse(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleDisperse;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleDisperse, Common.ReqCircleDisperse);
}
public bool ReqGetCircleUserList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqGetCircleUserList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqGetCircleUserList, Common.ReqGetCircleUserList);
}

public bool ReqGetCircleUserList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqGetCircleUserList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqGetCircleUserList, Common.ReqGetCircleUserList);
}
public bool ReqCircleChangeStateJoinWaitUser(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoChangeStateJoinWaitUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeStateJoinWaitUser;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeStateJoinWaitUser, Common.ReqCircleChangeStateJoinWaitUser);
}

public bool ReqCircleChangeStateJoinWaitUser(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoChangeStateJoinWaitUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeStateJoinWaitUser;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeStateJoinWaitUser, Common.ReqCircleChangeStateJoinWaitUser);
}
public bool ReqCircleUserKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleUserKick;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _uuid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleUserKick, Common.ReqCircleUserKick);
}

public bool ReqCircleUserKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleUserKick;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _uuid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleUserKick, Common.ReqCircleUserKick);
}
public bool ReqCircleChangeAuthLevel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeAuthLevel;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeAuthLevel, Common.ReqCircleChangeAuthLevel);
}

public bool ReqCircleChangeAuthLevel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeAuthLevel;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeAuthLevel, Common.ReqCircleChangeAuthLevel);
}
public bool ReqCircleChangeMark(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleMarkSet _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeMark;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeMark, Common.ReqCircleChangeMark);
}

public bool ReqCircleChangeMark(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleMarkSet _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeMark;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeMark, Common.ReqCircleChangeMark);
}
public bool ReqCircleChangeName(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeName _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeName;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeName, Common.ReqCircleChangeName);
}

public bool ReqCircleChangeName(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeName _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeName;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeName, Common.ReqCircleChangeName);
}
public bool ReqCircleChangeComment(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeComment;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeComment, Common.ReqCircleChangeComment);
}

public bool ReqCircleChangeComment(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeComment;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeComment, Common.ReqCircleChangeComment);
}
public bool ReqCircleChangeMainLanguage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _changeLang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeMainLanguage;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _changeLang);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeMainLanguage, Common.ReqCircleChangeMainLanguage);
}

public bool ReqCircleChangeMainLanguage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _changeLang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeMainLanguage;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _changeLang);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeMainLanguage, Common.ReqCircleChangeMainLanguage);
}
public bool ReqCircleChangeSuggestAnotherLangOpt(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool _state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeSuggestAnotherLangOpt;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _state);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChangeSuggestAnotherLangOpt, Common.ReqCircleChangeSuggestAnotherLangOpt);
}

public bool ReqCircleChangeSuggestAnotherLangOpt(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool _state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChangeSuggestAnotherLangOpt;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _state);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChangeSuggestAnotherLangOpt, Common.ReqCircleChangeSuggestAnotherLangOpt);
}
public bool ReqCircleAttendance(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleAttendance;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleAttendance, Common.ReqCircleAttendance);
}

public bool ReqCircleAttendance(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleAttendance;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleAttendance, Common.ReqCircleAttendance);
}
public bool ReqCircleBuyMarkItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleBuyMarkItem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _tid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleBuyMarkItem, Common.ReqCircleBuyMarkItem);
}

public bool ReqCircleBuyMarkItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleBuyMarkItem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _tid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleBuyMarkItem, Common.ReqCircleBuyMarkItem);
}
public bool ReqCircleChatSend(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChatSend;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChatSend, Common.ReqCircleChatSend);
}

public bool ReqCircleChatSend(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChatSend;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChatSend, Common.ReqCircleChatSend);
}
public bool ReqCircleGetMarkList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleGetMarkList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleGetMarkList, Common.ReqCircleGetMarkList);
}

public bool ReqCircleGetMarkList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleGetMarkList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleGetMarkList, Common.ReqCircleGetMarkList);
}
public bool ReqCircleSearch(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleSearch _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleSearch;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleSearch, Common.ReqCircleSearch);
}

public bool ReqCircleSearch(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleSearch _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleSearch;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleSearch, Common.ReqCircleSearch);
}
public bool ReqCircleChatList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqCircleChatList;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqCircleChatList, Common.ReqCircleChatList);
}

public bool ReqCircleChatList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqCircleChatList;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqCircleChatList, Common.ReqCircleChatList);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReqPing="ReqPing";
public const string RmiName_ReqLogOnCreditKey="ReqLogOnCreditKey";
public const string RmiName_ReqLogOut="ReqLogOut";
public const string RmiName_ReqGetTotlaRelocateCntToNotComplete="ReqGetTotlaRelocateCntToNotComplete";
public const string RmiName_ReqRelocateUserInfoSet="ReqRelocateUserInfoSet";
public const string RmiName_ReqRelocateUserComplate="ReqRelocateUserComplate";
public const string RmiName_ReqRefrashUserInfo="ReqRefrashUserInfo";
public const string RmiName_ReqReConnectUserInfo="ReqReConnectUserInfo";
public const string RmiName_ReqAccountCode="ReqAccountCode";
public const string RmiName_ReqAccountSetPassword="ReqAccountSetPassword";
public const string RmiName_ReqAccountCodeReward="ReqAccountCodeReward";
public const string RmiName_ReqAccountLinkReward="ReqAccountLinkReward";
public const string RmiName_ReqLinkAccountList="ReqLinkAccountList";
public const string RmiName_ReqAddLinkAccountAuth="ReqAddLinkAccountAuth";
public const string RmiName_ReqGetUserInfoFromAccountLink="ReqGetUserInfoFromAccountLink";
public const string RmiName_ReqPushNotifiTokenSet="ReqPushNotifiTokenSet";
public const string RmiName_ReqReflashLoginBonus="ReqReflashLoginBonus";
public const string RmiName_ReqRewardTakeAchieve="ReqRewardTakeAchieve";
public const string RmiName_ReqRewardTakeAchieveEvent="ReqRewardTakeAchieveEvent";
public const string RmiName_ReqRewardDailyMission="ReqRewardDailyMission";
public const string RmiName_ReqRewardWeekMission="ReqRewardWeekMission";
public const string RmiName_ReqRewardInfluMission="ReqRewardInfluMission";
public const string RmiName_ReqUpdateGllaMission="ReqUpdateGllaMission";
public const string RmiName_ReqRewardGllaMission="ReqRewardGllaMission";
public const string RmiName_ReqRewardPassMission="ReqRewardPassMission";
public const string RmiName_ReqRewardPass="ReqRewardPass";
public const string RmiName_ReqEventRewardReset="ReqEventRewardReset";
public const string RmiName_ReqEventRewardTake="ReqEventRewardTake";
public const string RmiName_ReqEventLgnRewardTake="ReqEventLgnRewardTake";
public const string RmiName_ReqSetTutorialVal="ReqSetTutorialVal";
public const string RmiName_ReqSetTutorialFlag="ReqSetTutorialFlag";
public const string RmiName_ReqAddCharacter="ReqAddCharacter";
public const string RmiName_ReqChangePreferenceNum="ReqChangePreferenceNum";
public const string RmiName_ReqChangeMainChar="ReqChangeMainChar";
public const string RmiName_ReqGradeUpChar="ReqGradeUpChar";
public const string RmiName_ReqSetMainCostumeChar="ReqSetMainCostumeChar";
public const string RmiName_ReqRandomCostumeDyeing="ReqRandomCostumeDyeing";
public const string RmiName_ReqSetCostumeDyeing="ReqSetCostumeDyeing";
public const string RmiName_ReqCostumeDyeingLock="ReqCostumeDyeingLock";
public const string RmiName_ReqUserCostumeColor="ReqUserCostumeColor";
public const string RmiName_ReqEquipWeaponChar="ReqEquipWeaponChar";
public const string RmiName_ReqApplySkillInChar="ReqApplySkillInChar";
public const string RmiName_ReqLvUpSkill="ReqLvUpSkill";
public const string RmiName_ReqLvUpUserSkill="ReqLvUpUserSkill";
public const string RmiName_ReqResetUserSkill="ReqResetUserSkill";
public const string RmiName_ReqGivePresentChar="ReqGivePresentChar";
public const string RmiName_ReqResetSecretCntChar="ReqResetSecretCntChar";
public const string RmiName_ReqRaidHPRestore="ReqRaidHPRestore";
public const string RmiName_ReqStageStart="ReqStageStart";
public const string RmiName_ReqStageEnd="ReqStageEnd";
public const string RmiName_ReqStageEndFail="ReqStageEndFail";
public const string RmiName_ReqStageContinue="ReqStageContinue";
public const string RmiName_ReqRaidStageDrop="ReqRaidStageDrop";
public const string RmiName_ReqBookNewConfirm="ReqBookNewConfirm";
public const string RmiName_ReqTimeAtkRankingList="ReqTimeAtkRankingList";
public const string RmiName_ReqTimeAtkRankerDetail="ReqTimeAtkRankerDetail";
public const string RmiName_ReqInitRaidSeasonData="ReqInitRaidSeasonData";
public const string RmiName_ReqRaidRankingList="ReqRaidRankingList";
public const string RmiName_ReqRaidRankerDetail="ReqRaidRankerDetail";
public const string RmiName_ReqRaidFirstRankingList="ReqRaidFirstRankingList";
public const string RmiName_ReqRaidFirstRankerDetail="ReqRaidFirstRankerDetail";
public const string RmiName_ReqSetRaidTeam="ReqSetRaidTeam";
public const string RmiName_ReqArenaSeasonPlay="ReqArenaSeasonPlay";
public const string RmiName_ReqSetArenaTeam="ReqSetArenaTeam";
public const string RmiName_ReqArenaGameStart="ReqArenaGameStart";
public const string RmiName_ReqArenaGameEnd="ReqArenaGameEnd";
public const string RmiName_ReqArenaEnemySearch="ReqArenaEnemySearch";
public const string RmiName_ReqArenaRankingList="ReqArenaRankingList";
public const string RmiName_ReqArenaRankerDetail="ReqArenaRankerDetail";
public const string RmiName_ReqSetArenaTowerTeam="ReqSetArenaTowerTeam";
public const string RmiName_ReqArenaTowerGameStart="ReqArenaTowerGameStart";
public const string RmiName_ReqArenaTowerGameEnd="ReqArenaTowerGameEnd";
public const string RmiName_ReqUnexpectedPackageDailyReward="ReqUnexpectedPackageDailyReward";
public const string RmiName_ReqCharLvUnexpectedPackageHardOpen="ReqCharLvUnexpectedPackageHardOpen";
public const string RmiName_ReqAccountDelete="ReqAccountDelete";
public const string RmiName_ReqGetUserPresetList="ReqGetUserPresetList";
public const string RmiName_ReqAddOrUpdateUserPreset="ReqAddOrUpdateUserPreset";
public const string RmiName_ReqUserPresetLoad="ReqUserPresetLoad";
public const string RmiName_ReqUserPresetChangeName="ReqUserPresetChangeName";
public const string RmiName_ReqCircleOpen="ReqCircleOpen";
public const string RmiName_ReqSuggestCircleList="ReqSuggestCircleList";
public const string RmiName_ReqCircleJoin="ReqCircleJoin";
public const string RmiName_ReqCircleJoinCancel="ReqCircleJoinCancel";
public const string RmiName_ReqCircleLobbyInfo="ReqCircleLobbyInfo";
public const string RmiName_ReqCircleWithdrawal="ReqCircleWithdrawal";
public const string RmiName_ReqCircleDisperse="ReqCircleDisperse";
public const string RmiName_ReqGetCircleUserList="ReqGetCircleUserList";
public const string RmiName_ReqCircleChangeStateJoinWaitUser="ReqCircleChangeStateJoinWaitUser";
public const string RmiName_ReqCircleUserKick="ReqCircleUserKick";
public const string RmiName_ReqCircleChangeAuthLevel="ReqCircleChangeAuthLevel";
public const string RmiName_ReqCircleChangeMark="ReqCircleChangeMark";
public const string RmiName_ReqCircleChangeName="ReqCircleChangeName";
public const string RmiName_ReqCircleChangeComment="ReqCircleChangeComment";
public const string RmiName_ReqCircleChangeMainLanguage="ReqCircleChangeMainLanguage";
public const string RmiName_ReqCircleChangeSuggestAnotherLangOpt="ReqCircleChangeSuggestAnotherLangOpt";
public const string RmiName_ReqCircleAttendance="ReqCircleAttendance";
public const string RmiName_ReqCircleBuyMarkItem="ReqCircleBuyMarkItem";
public const string RmiName_ReqCircleChatSend="ReqCircleChatSend";
public const string RmiName_ReqCircleGetMarkList="ReqCircleGetMarkList";
public const string RmiName_ReqCircleSearch="ReqCircleSearch";
public const string RmiName_ReqCircleChatList="ReqCircleChatList";
       
public const string RmiName_First = RmiName_ReqPing;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReqPing="";
public const string RmiName_ReqLogOnCreditKey="";
public const string RmiName_ReqLogOut="";
public const string RmiName_ReqGetTotlaRelocateCntToNotComplete="";
public const string RmiName_ReqRelocateUserInfoSet="";
public const string RmiName_ReqRelocateUserComplate="";
public const string RmiName_ReqRefrashUserInfo="";
public const string RmiName_ReqReConnectUserInfo="";
public const string RmiName_ReqAccountCode="";
public const string RmiName_ReqAccountSetPassword="";
public const string RmiName_ReqAccountCodeReward="";
public const string RmiName_ReqAccountLinkReward="";
public const string RmiName_ReqLinkAccountList="";
public const string RmiName_ReqAddLinkAccountAuth="";
public const string RmiName_ReqGetUserInfoFromAccountLink="";
public const string RmiName_ReqPushNotifiTokenSet="";
public const string RmiName_ReqReflashLoginBonus="";
public const string RmiName_ReqRewardTakeAchieve="";
public const string RmiName_ReqRewardTakeAchieveEvent="";
public const string RmiName_ReqRewardDailyMission="";
public const string RmiName_ReqRewardWeekMission="";
public const string RmiName_ReqRewardInfluMission="";
public const string RmiName_ReqUpdateGllaMission="";
public const string RmiName_ReqRewardGllaMission="";
public const string RmiName_ReqRewardPassMission="";
public const string RmiName_ReqRewardPass="";
public const string RmiName_ReqEventRewardReset="";
public const string RmiName_ReqEventRewardTake="";
public const string RmiName_ReqEventLgnRewardTake="";
public const string RmiName_ReqSetTutorialVal="";
public const string RmiName_ReqSetTutorialFlag="";
public const string RmiName_ReqAddCharacter="";
public const string RmiName_ReqChangePreferenceNum="";
public const string RmiName_ReqChangeMainChar="";
public const string RmiName_ReqGradeUpChar="";
public const string RmiName_ReqSetMainCostumeChar="";
public const string RmiName_ReqRandomCostumeDyeing="";
public const string RmiName_ReqSetCostumeDyeing="";
public const string RmiName_ReqCostumeDyeingLock="";
public const string RmiName_ReqUserCostumeColor="";
public const string RmiName_ReqEquipWeaponChar="";
public const string RmiName_ReqApplySkillInChar="";
public const string RmiName_ReqLvUpSkill="";
public const string RmiName_ReqLvUpUserSkill="";
public const string RmiName_ReqResetUserSkill="";
public const string RmiName_ReqGivePresentChar="";
public const string RmiName_ReqResetSecretCntChar="";
public const string RmiName_ReqRaidHPRestore="";
public const string RmiName_ReqStageStart="";
public const string RmiName_ReqStageEnd="";
public const string RmiName_ReqStageEndFail="";
public const string RmiName_ReqStageContinue="";
public const string RmiName_ReqRaidStageDrop="";
public const string RmiName_ReqBookNewConfirm="";
public const string RmiName_ReqTimeAtkRankingList="";
public const string RmiName_ReqTimeAtkRankerDetail="";
public const string RmiName_ReqInitRaidSeasonData="";
public const string RmiName_ReqRaidRankingList="";
public const string RmiName_ReqRaidRankerDetail="";
public const string RmiName_ReqRaidFirstRankingList="";
public const string RmiName_ReqRaidFirstRankerDetail="";
public const string RmiName_ReqSetRaidTeam="";
public const string RmiName_ReqArenaSeasonPlay="";
public const string RmiName_ReqSetArenaTeam="";
public const string RmiName_ReqArenaGameStart="";
public const string RmiName_ReqArenaGameEnd="";
public const string RmiName_ReqArenaEnemySearch="";
public const string RmiName_ReqArenaRankingList="";
public const string RmiName_ReqArenaRankerDetail="";
public const string RmiName_ReqSetArenaTowerTeam="";
public const string RmiName_ReqArenaTowerGameStart="";
public const string RmiName_ReqArenaTowerGameEnd="";
public const string RmiName_ReqUnexpectedPackageDailyReward="";
public const string RmiName_ReqCharLvUnexpectedPackageHardOpen="";
public const string RmiName_ReqAccountDelete="";
public const string RmiName_ReqGetUserPresetList="";
public const string RmiName_ReqAddOrUpdateUserPreset="";
public const string RmiName_ReqUserPresetLoad="";
public const string RmiName_ReqUserPresetChangeName="";
public const string RmiName_ReqCircleOpen="";
public const string RmiName_ReqSuggestCircleList="";
public const string RmiName_ReqCircleJoin="";
public const string RmiName_ReqCircleJoinCancel="";
public const string RmiName_ReqCircleLobbyInfo="";
public const string RmiName_ReqCircleWithdrawal="";
public const string RmiName_ReqCircleDisperse="";
public const string RmiName_ReqGetCircleUserList="";
public const string RmiName_ReqCircleChangeStateJoinWaitUser="";
public const string RmiName_ReqCircleUserKick="";
public const string RmiName_ReqCircleChangeAuthLevel="";
public const string RmiName_ReqCircleChangeMark="";
public const string RmiName_ReqCircleChangeName="";
public const string RmiName_ReqCircleChangeComment="";
public const string RmiName_ReqCircleChangeMainLanguage="";
public const string RmiName_ReqCircleChangeSuggestAnotherLangOpt="";
public const string RmiName_ReqCircleAttendance="";
public const string RmiName_ReqCircleBuyMarkItem="";
public const string RmiName_ReqCircleChatSend="";
public const string RmiName_ReqCircleGetMarkList="";
public const string RmiName_ReqCircleSearch="";
public const string RmiName_ReqCircleChatList="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace GlobalS2C
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool NotiSvrReloadTableInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserReflash _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiSvrReloadTableInfo;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiSvrReloadTableInfo, Common.NotiSvrReloadTableInfo);
}

public bool NotiSvrReloadTableInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserReflash _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiSvrReloadTableInfo;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiSvrReloadTableInfo, Common.NotiSvrReloadTableInfo);
}
public bool NotiCloseServTime(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _leftTime_Sec)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCloseServTime;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _leftTime_Sec);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCloseServTime, Common.NotiCloseServTime);
}

public bool NotiCloseServTime(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _leftTime_Sec)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCloseServTime;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _leftTime_Sec);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCloseServTime, Common.NotiCloseServTime);
}
public bool NotiCommonErr(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _errNum)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCommonErr;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _errNum);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCommonErr, Common.NotiCommonErr);
}

public bool NotiCommonErr(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _errNum)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCommonErr;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _errNum);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCommonErr, Common.NotiCommonErr);
}
public bool NotiEmbargoWordErr(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiEmbargoWordErr;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiEmbargoWordErr, Common.NotiEmbargoWordErr);
}

public bool NotiEmbargoWordErr(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiEmbargoWordErr;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiEmbargoWordErr, Common.NotiEmbargoWordErr);
}
public bool NotiCheckVersionErr(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoVersion _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCheckVersionErr;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCheckVersionErr, Common.NotiCheckVersionErr);
}

public bool NotiCheckVersionErr(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoVersion _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCheckVersionErr;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCheckVersionErr, Common.NotiCheckVersionErr);
}
public bool NotiMoveUserInSvrToSvr(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _errNum, System.Guid _creditKey, PktInfoSimpleSvr _tgtSvrInfo)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiMoveUserInSvrToSvr;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _errNum);
		PN_MarshalerEx.Write(__msg, _creditKey);
		PN_MarshalerEx.Write(__msg, _tgtSvrInfo);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiMoveUserInSvrToSvr, Common.NotiMoveUserInSvrToSvr);
}

public bool NotiMoveUserInSvrToSvr(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _errNum, System.Guid _creditKey, PktInfoSimpleSvr _tgtSvrInfo)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiMoveUserInSvrToSvr;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _errNum);
PN_MarshalerEx.Write(__msg, _creditKey);
PN_MarshalerEx.Write(__msg, _tgtSvrInfo);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiMoveUserInSvrToSvr, Common.NotiMoveUserInSvrToSvr);
}
public bool NotiUpdateTicket(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateTicketUserNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateTicket;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateTicket, Common.NotiUpdateTicket);
}

public bool NotiUpdateTicket(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateTicketUserNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateTicket;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateTicket, Common.NotiUpdateTicket);
}
public bool NotiUserMarkTake(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserMarkTake _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUserMarkTake;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUserMarkTake, Common.NotiUserMarkTake);
}

public bool NotiUserMarkTake(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserMarkTake _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUserMarkTake;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUserMarkTake, Common.NotiUserMarkTake);
}
public bool NotiAddMail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiAddMail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiAddMail, Common.NotiAddMail);
}

public bool NotiAddMail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiAddMail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiAddMail, Common.NotiAddMail);
}
public bool NotiUpdateAchieve(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAchieve _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateAchieve;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateAchieve, Common.NotiUpdateAchieve);
}

public bool NotiUpdateAchieve(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAchieve _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateAchieve;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateAchieve, Common.NotiUpdateAchieve);
}
public bool NotiUpdateAchieveEvent(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveEvent _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateAchieveEvent;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateAchieveEvent, Common.NotiUpdateAchieveEvent);
}

public bool NotiUpdateAchieveEvent(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveEvent _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateAchieveEvent;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateAchieveEvent, Common.NotiUpdateAchieveEvent);
}
public bool NotiSetSvrRotationGacha(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoComTimeAndTID _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiSetSvrRotationGacha;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiSetSvrRotationGacha, Common.NotiSetSvrRotationGacha);
}

public bool NotiSetSvrRotationGacha(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoComTimeAndTID _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiSetSvrRotationGacha;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiSetSvrRotationGacha, Common.NotiSetSvrRotationGacha);
}
public bool NotiSetSvrSecretQuestOpt(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoSecretQuestOpt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiSetSvrSecretQuestOpt;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiSetSvrSecretQuestOpt, Common.NotiSetSvrSecretQuestOpt);
}

public bool NotiSetSvrSecretQuestOpt(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoSecretQuestOpt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiSetSvrSecretQuestOpt;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiSetSvrSecretQuestOpt, Common.NotiSetSvrSecretQuestOpt);
}
public bool NotiUpdateDailyMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Daily _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateDailyMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateDailyMission, Common.NotiUpdateDailyMission);
}

public bool NotiUpdateDailyMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Daily _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateDailyMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateDailyMission, Common.NotiUpdateDailyMission);
}
public bool NotiResetWeekMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Weekly _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiResetWeekMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiResetWeekMission, Common.NotiResetWeekMission);
}

public bool NotiResetWeekMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Weekly _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiResetWeekMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiResetWeekMission, Common.NotiResetWeekMission);
}
public bool NotiUpdateWeekMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Weekly _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateWeekMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateWeekMission, Common.NotiUpdateWeekMission);
}

public bool NotiUpdateWeekMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Weekly _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateWeekMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateWeekMission, Common.NotiUpdateWeekMission);
}
public bool NotiUpdateInfluMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Influ _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateInfluMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateInfluMission, Common.NotiUpdateInfluMission);
}

public bool NotiUpdateInfluMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Influ _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateInfluMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateInfluMission, Common.NotiUpdateInfluMission);
}
public bool NotiUserInfluMissionChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoInfluChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUserInfluMissionChange;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUserInfluMissionChange, Common.NotiUserInfluMissionChange);
}

public bool NotiUserInfluMissionChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoInfluChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUserInfluMissionChange;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUserInfluMissionChange, Common.NotiUserInfluMissionChange);
}
public bool NotiUpdateGllaMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Guerrilla _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateGllaMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateGllaMission, Common.NotiUpdateGllaMission);
}

public bool NotiUpdateGllaMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Guerrilla _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateGllaMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateGllaMission, Common.NotiUpdateGllaMission);
}
public bool NotiUpdatePassMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Pass _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdatePassMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdatePassMission, Common.NotiUpdatePassMission);
}

public bool NotiUpdatePassMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Pass _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdatePassMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdatePassMission, Common.NotiUpdatePassMission);
}
public bool NotiUserPassChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPassChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUserPassChange;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUserPassChange, Common.NotiUserPassChange);
}

public bool NotiUserPassChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPassChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUserPassChange;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUserPassChange, Common.NotiUserPassChange);
}
public bool NotiUserEventChange(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEventChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUserEventChange;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUserEventChange, Common.NotiUserEventChange);
}

public bool NotiUserEventChange(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEventChangeList.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUserEventChange;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUserEventChange, Common.NotiUserEventChange);
}
public bool NotiUpdateArenaTime(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaSeasonTime _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateArenaTime;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateArenaTime, Common.NotiUpdateArenaTime);
}

public bool NotiUpdateArenaTime(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaSeasonTime _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateArenaTime;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateArenaTime, Common.NotiUpdateArenaTime);
}
public bool NotiUpdateRaidTime(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidSeasonTime _pkt, System.UInt32 _openTypeValue)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateRaidTime;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		PN_MarshalerEx.Write(__msg, _openTypeValue);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateRaidTime, Common.NotiUpdateRaidTime);
}

public bool NotiUpdateRaidTime(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidSeasonTime _pkt, System.UInt32 _openTypeValue)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateRaidTime;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
PN_MarshalerEx.Write(__msg, _openTypeValue);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateRaidTime, Common.NotiUpdateRaidTime);
}
public bool NotiUpdateRaidInitStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiUpdateRaidInitStart;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiUpdateRaidInitStart, Common.NotiUpdateRaidInitStart);
}

public bool NotiUpdateRaidInitStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiUpdateRaidInitStart;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiUpdateRaidInitStart, Common.NotiUpdateRaidInitStart);
}
public bool NotiCommunityUserArenaOn(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _onArenaUuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCommunityUserArenaOn;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _onArenaUuid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCommunityUserArenaOn, Common.NotiCommunityUserArenaOn);
}

public bool NotiCommunityUserArenaOn(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _onArenaUuid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCommunityUserArenaOn;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _onArenaUuid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCommunityUserArenaOn, Common.NotiCommunityUserArenaOn);
}
public bool NotiCommunityUserCallCnt(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCommuCallCntNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCommunityUserCallCnt;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCommunityUserCallCnt, Common.NotiCommunityUserCallCnt);
}

public bool NotiCommunityUserCallCnt(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCommuCallCntNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCommunityUserCallCnt;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCommunityUserCallCnt, Common.NotiCommunityUserCallCnt);
}
public bool NotiCommunitySetArenaTowerID(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCommuArenaTowerIDNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCommunitySetArenaTowerID;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCommunitySetArenaTowerID, Common.NotiCommunitySetArenaTowerID);
}

public bool NotiCommunitySetArenaTowerID(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCommuArenaTowerIDNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCommunitySetArenaTowerID;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCommunitySetArenaTowerID, Common.NotiCommunitySetArenaTowerID);
}
public bool NotiFriendFromAdd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoFriend _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiFriendFromAdd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiFriendFromAdd, Common.NotiFriendFromAdd);
}

public bool NotiFriendFromAdd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoFriend _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiFriendFromAdd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiFriendFromAdd, Common.NotiFriendFromAdd);
}
public bool NotiFriendFromDel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiFriendFromDel;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiFriendFromDel, Common.NotiFriendFromDel);
}

public bool NotiFriendFromDel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiFriendFromDel;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiFriendFromDel, Common.NotiFriendFromDel);
}
public bool NotiFriendAnswer(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCommuAnswerNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiFriendAnswer;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiFriendAnswer, Common.NotiFriendAnswer);
}

public bool NotiFriendAnswer(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCommuAnswerNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiFriendAnswer;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiFriendAnswer, Common.NotiFriendAnswer);
}
public bool NotiFriendKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCommuKickNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiFriendKick;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiFriendKick, Common.NotiFriendKick);
}

public bool NotiFriendKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCommuKickNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiFriendKick;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiFriendKick, Common.NotiFriendKick);
}
public bool NotiFriendFlagUpdate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoFriendFlagUpdateNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiFriendFlagUpdate;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiFriendFlagUpdate, Common.NotiFriendFlagUpdate);
}

public bool NotiFriendFlagUpdate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoFriendFlagUpdateNoti _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiFriendFlagUpdate;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiFriendFlagUpdate, Common.NotiFriendFlagUpdate);
}
public bool AckPing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTime _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckPing;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckPing, Common.AckPing);
}

public bool AckPing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTime _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckPing;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckPing, Common.AckPing);
}
public bool AckLogOnCreditKey(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _err)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLogOnCreditKey;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _err);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLogOnCreditKey, Common.AckLogOnCreditKey);
}

public bool AckLogOnCreditKey(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _err)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLogOnCreditKey;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _err);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLogOnCreditKey, Common.AckLogOnCreditKey);
}
public bool AckLogOut(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLogOut;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLogOut, Common.AckLogOut);
}

public bool AckLogOut(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLogOut;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLogOut, Common.AckLogOut);
}
public bool AckGetTotlaRelocateCntToNotComplete(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGetTotlaRelocateCntToNotComplete;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGetTotlaRelocateCntToNotComplete, Common.AckGetTotlaRelocateCntToNotComplete);
}

public bool AckGetTotlaRelocateCntToNotComplete(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGetTotlaRelocateCntToNotComplete;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGetTotlaRelocateCntToNotComplete, Common.AckGetTotlaRelocateCntToNotComplete);
}
public bool AckRelocateUserInfoSet(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRelocateUserInfoSet;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRelocateUserInfoSet, Common.AckRelocateUserInfoSet);
}

public bool AckRelocateUserInfoSet(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRelocateUserInfoSet;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRelocateUserInfoSet, Common.AckRelocateUserInfoSet);
}
public bool AckRelocateUserComplate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRelocateUserComplate;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRelocateUserComplate, Common.AckRelocateUserComplate);
}

public bool AckRelocateUserComplate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRelocateUser _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRelocateUserComplate;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRelocateUserComplate, Common.AckRelocateUserComplate);
}
public bool AckRefrashUserInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRefreahUserInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRefrashUserInfo;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRefrashUserInfo, Common.AckRefrashUserInfo);
}

public bool AckRefrashUserInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRefreahUserInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRefrashUserInfo;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRefrashUserInfo, Common.AckRefrashUserInfo);
}
public bool AckReConnectUserInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoReconnectUserInfoAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckReConnectUserInfo;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckReConnectUserInfo, Common.AckReConnectUserInfo);
}

public bool AckReConnectUserInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoReconnectUserInfoAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckReConnectUserInfo;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckReConnectUserInfo, Common.AckReConnectUserInfo);
}
public bool AckAccountCode(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStr _code, PktInfoStr _password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAccountCode;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _code);
		PN_MarshalerEx.Write(__msg, _password);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAccountCode, Common.AckAccountCode);
}

public bool AckAccountCode(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStr _code, PktInfoStr _password)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAccountCode;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _code);
PN_MarshalerEx.Write(__msg, _password);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAccountCode, Common.AckAccountCode);
}
public bool AckAccountSetPassword(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAccountSetPassword;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAccountSetPassword, Common.AckAccountSetPassword);
}

public bool AckAccountSetPassword(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAccountSetPassword;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAccountSetPassword, Common.AckAccountSetPassword);
}
public bool AckAccountCodeReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAccountCodeReward;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAccountCodeReward, Common.AckAccountCodeReward);
}

public bool AckAccountCodeReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAccountCodeReward;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAccountCodeReward, Common.AckAccountCodeReward);
}
public bool AckAccountLinkReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAccountLinkReward;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAccountLinkReward, Common.AckAccountLinkReward);
}

public bool AckAccountLinkReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAccountLinkReward;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAccountLinkReward, Common.AckAccountLinkReward);
}
public bool AckLinkAccountList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLinkAccountList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLinkAccountList, Common.AckLinkAccountList);
}

public bool AckLinkAccountList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLinkAccountList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLinkAccountList, Common.AckLinkAccountList);
}
public bool AckAddLinkAccountAuth(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAddLinkAccountAuth;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAddLinkAccountAuth, Common.AckAddLinkAccountAuth);
}

public bool AckAddLinkAccountAuth(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAccountLinkInfo _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAddLinkAccountAuth;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAddLinkAccountAuth, Common.AckAddLinkAccountAuth);
}
public bool AckGetUserInfoFromAccountLink(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserInfoFromLinkAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGetUserInfoFromAccountLink;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGetUserInfoFromAccountLink, Common.AckGetUserInfoFromAccountLink);
}

public bool AckGetUserInfoFromAccountLink(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserInfoFromLinkAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGetUserInfoFromAccountLink;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGetUserInfoFromAccountLink, Common.AckGetUserInfoFromAccountLink);
}
public bool AckPushNotifiTokenSet(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoPushNotiSetToken _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckPushNotifiTokenSet;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckPushNotifiTokenSet, Common.AckPushNotifiTokenSet);
}

public bool AckPushNotifiTokenSet(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoPushNotiSetToken _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckPushNotifiTokenSet;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckPushNotifiTokenSet, Common.AckPushNotifiTokenSet);
}
public bool AckReflashLoginBonus(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoLoginBonus _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckReflashLoginBonus;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckReflashLoginBonus, Common.AckReflashLoginBonus);
}

public bool AckReflashLoginBonus(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoLoginBonus _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckReflashLoginBonus;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckReflashLoginBonus, Common.AckReflashLoginBonus);
}
public bool AckRewardTakeAchieve(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardTakeAchieve;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardTakeAchieve, Common.AckRewardTakeAchieve);
}

public bool AckRewardTakeAchieve(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardTakeAchieve;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardTakeAchieve, Common.AckRewardTakeAchieve);
}
public bool AckRewardTakeAchieveEvent(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveEventReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardTakeAchieveEvent;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardTakeAchieveEvent, Common.AckRewardTakeAchieveEvent);
}

public bool AckRewardTakeAchieveEvent(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAchieveEventReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardTakeAchieveEvent;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardTakeAchieveEvent, Common.AckRewardTakeAchieveEvent);
}
public bool AckRewardDailyMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdDailyMissionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardDailyMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardDailyMission, Common.AckRewardDailyMission);
}

public bool AckRewardDailyMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdDailyMissionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardDailyMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardDailyMission, Common.AckRewardDailyMission);
}
public bool AckRewardWeekMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _rewardFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardWeekMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _rewardFlag);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardWeekMission, Common.AckRewardWeekMission);
}

public bool AckRewardWeekMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _rewardFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardWeekMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _rewardFlag);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardWeekMission, Common.AckRewardWeekMission);
}
public bool AckRewardInfluMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdInfluMissionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardInfluMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardInfluMission, Common.AckRewardInfluMission);
}

public bool AckRewardInfluMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdInfluMissionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardInfluMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardInfluMission, Common.AckRewardInfluMission);
}
public bool AckUpdateGllaMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUpdateGllaMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUpdateGllaMission, Common.AckUpdateGllaMission);
}

public bool AckUpdateGllaMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUpdateGllaMission _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUpdateGllaMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUpdateGllaMission, Common.AckUpdateGllaMission);
}
public bool AckRewardGllaMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Guerrilla _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardGllaMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardGllaMission, Common.AckRewardGllaMission);
}

public bool AckRewardGllaMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Guerrilla _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardGllaMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardGllaMission, Common.AckRewardGllaMission);
}
public bool AckRewardPassMission(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Pass _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardPassMission;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardPassMission, Common.AckRewardPassMission);
}

public bool AckRewardPassMission(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoMission.Pass _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardPassMission;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardPassMission, Common.AckRewardPassMission);
}
public bool AckRewardPass(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRewardPass;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRewardPass, Common.AckRewardPass);
}

public bool AckRewardPass(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdPassAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRewardPass;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRewardPass, Common.AckRewardPass);
}
public bool AckEventRewardReset(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardReset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEventRewardReset;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEventRewardReset, Common.AckEventRewardReset);
}

public bool AckEventRewardReset(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardReset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEventRewardReset;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEventRewardReset, Common.AckEventRewardReset);
}
public bool AckEventRewardTake(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardTake _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEventRewardTake;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEventRewardTake, Common.AckEventRewardTake);
}

public bool AckEventRewardTake(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEventRewardTake _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEventRewardTake;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEventRewardTake, Common.AckEventRewardTake);
}
public bool AckEventLgnRewardTake(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoEvtLgnRwdAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEventLgnRewardTake;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEventLgnRewardTake, Common.AckEventLgnRewardTake);
}

public bool AckEventLgnRewardTake(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoEvtLgnRwdAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEventLgnRewardTake;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEventLgnRewardTake, Common.AckEventLgnRewardTake);
}
public bool AckSetTutorialVal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tutoVal)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetTutorialVal;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _tutoVal);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetTutorialVal, Common.AckSetTutorialVal);
}

public bool AckSetTutorialVal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt32 _tutoVal)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetTutorialVal;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _tutoVal);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetTutorialVal, Common.AckSetTutorialVal);
}
public bool AckSetTutorialFlag(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _tutoFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetTutorialFlag;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _tutoFlag);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetTutorialFlag, Common.AckSetTutorialFlag);
}

public bool AckSetTutorialFlag(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _tutoFlag)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetTutorialFlag;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _tutoFlag);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetTutorialFlag, Common.AckSetTutorialFlag);
}
public bool AckAddCharacter(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAddChar _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAddCharacter;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAddCharacter, Common.AckAddCharacter);
}

public bool AckAddCharacter(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAddChar _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAddCharacter;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAddCharacter, Common.AckAddCharacter);
}
public bool AckChangePreferenceNum(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDValue _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckChangePreferenceNum;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckChangePreferenceNum, Common.AckChangePreferenceNum);
}

public bool AckChangePreferenceNum(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDValue _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckChangePreferenceNum;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckChangePreferenceNum, Common.AckChangePreferenceNum);
}
public bool AckChangeMainChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUIDValue _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckChangeMainChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckChangeMainChar, Common.AckChangeMainChar);
}

public bool AckChangeMainChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUIDValue _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckChangeMainChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckChangeMainChar, Common.AckChangeMainChar);
}
public bool AckGradeUpChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharGradeUp _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGradeUpChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGradeUpChar, Common.AckGradeUpChar);
}

public bool AckGradeUpChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharGradeUp _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGradeUpChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGradeUpChar, Common.AckGradeUpChar);
}
public bool AckSetGradeLvChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharGradeExpLv _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetGradeLvChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetGradeLvChar, Common.AckSetGradeLvChar);
}

public bool AckSetGradeLvChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharGradeExpLv _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetGradeLvChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetGradeLvChar, Common.AckSetGradeLvChar);
}
public bool AckSetMainCostumeChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharSetMainCostumeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetMainCostumeChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetMainCostumeChar, Common.AckSetMainCostumeChar);
}

public bool AckSetMainCostumeChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharSetMainCostumeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetMainCostumeChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetMainCostumeChar, Common.AckSetMainCostumeChar);
}
public bool AckRandomCostumeDyeing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRandomCostumeDyeing _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRandomCostumeDyeing;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRandomCostumeDyeing, Common.AckRandomCostumeDyeing);
}

public bool AckRandomCostumeDyeing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRandomCostumeDyeing _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRandomCostumeDyeing;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRandomCostumeDyeing, Common.AckRandomCostumeDyeing);
}
public bool AckSetCostumeDyeing(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCostume.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetCostumeDyeing;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetCostumeDyeing, Common.AckSetCostumeDyeing);
}

public bool AckSetCostumeDyeing(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCostume.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetCostumeDyeing;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetCostumeDyeing, Common.AckSetCostumeDyeing);
}
public bool AckCostumeDyeingLock(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCostumeDyeingLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCostumeDyeingLock;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCostumeDyeingLock, Common.AckCostumeDyeingLock);
}

public bool AckCostumeDyeingLock(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCostumeDyeingLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCostumeDyeingLock;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCostumeDyeingLock, Common.AckCostumeDyeingLock);
}
public bool AckUserCostumeColor(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserCostumeColor _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUserCostumeColor;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUserCostumeColor, Common.AckUserCostumeColor);
}

public bool AckUserCostumeColor(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserCostumeColor _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUserCostumeColor;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUserCostumeColor, Common.AckUserCostumeColor);
}
public bool AckEquipWeaponChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharEquipWeapon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEquipWeaponChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEquipWeaponChar, Common.AckEquipWeaponChar);
}

public bool AckEquipWeaponChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharEquipWeapon _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEquipWeaponChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEquipWeaponChar, Common.AckEquipWeaponChar);
}
public bool AckApplySkillInChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharSlotSkill _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplySkillInChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplySkillInChar, Common.AckApplySkillInChar);
}

public bool AckApplySkillInChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharSlotSkill _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplySkillInChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplySkillInChar, Common.AckApplySkillInChar);
}
public bool AckLvUpSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoSkillLvUp _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLvUpSkill;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLvUpSkill, Common.AckLvUpSkill);
}

public bool AckLvUpSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoSkillLvUp _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLvUpSkill;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLvUpSkill, Common.AckLvUpSkill);
}
public bool AckLvUpUserSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklLvUpAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLvUpUserSkill;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLvUpUserSkill, Common.AckLvUpUserSkill);
}

public bool AckLvUpUserSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklLvUpAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLvUpUserSkill;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLvUpUserSkill, Common.AckLvUpUserSkill);
}
public bool AckResetUserSkill(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklReset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckResetUserSkill;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckResetUserSkill, Common.AckResetUserSkill);
}

public bool AckResetUserSkill(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserSklReset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckResetUserSkill;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckResetUserSkill, Common.AckResetUserSkill);
}
public bool AckGivePresentChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGivePresentCharAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGivePresentChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGivePresentChar, Common.AckGivePresentChar);
}

public bool AckGivePresentChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGivePresentCharAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGivePresentChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGivePresentChar, Common.AckGivePresentChar);
}
public bool AckResetSecretCntChar(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCharSecretCntRst _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckResetSecretCntChar;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckResetSecretCntChar, Common.AckResetSecretCntChar);
}

public bool AckResetSecretCntChar(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCharSecretCntRst _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckResetSecretCntChar;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckResetSecretCntChar, Common.AckResetSecretCntChar);
}
public bool AckRaidHPRestore(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRestoreHPAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidHPRestore;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidHPRestore, Common.AckRaidHPRestore);
}

public bool AckRaidHPRestore(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRestoreHPAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidHPRestore;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidHPRestore, Common.AckRaidHPRestore);
}
public bool AckStageStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckStageStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckStageStart, Common.AckStageStart);
}

public bool AckStageStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckStageStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckStageStart, Common.AckStageStart);
}
public bool AckStageEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameResultAck _pkt, PktInfoProductPack _pktProduct)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckStageEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		PN_MarshalerEx.Write(__msg, _pktProduct);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckStageEnd, Common.AckStageEnd);
}

public bool AckStageEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameResultAck _pkt, PktInfoProductPack _pktProduct)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckStageEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
PN_MarshalerEx.Write(__msg, _pktProduct);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckStageEnd, Common.AckStageEnd);
}
public bool AckStageEndFail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameEndFail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckStageEndFail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckStageEndFail, Common.AckStageEndFail);
}

public bool AckStageEndFail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStageGameEndFail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckStageEndFail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckStageEndFail, Common.AckStageEndFail);
}
public bool AckStageContinue(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoConsumeItemAndGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckStageContinue;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckStageContinue, Common.AckStageContinue);
}

public bool AckStageContinue(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoConsumeItemAndGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckStageContinue;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckStageContinue, Common.AckStageContinue);
}
public bool AckRaidStageDrop(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidStageDrop _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidStageDrop;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidStageDrop, Common.AckRaidStageDrop);
}

public bool AckRaidStageDrop(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidStageDrop _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidStageDrop;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidStageDrop, Common.AckRaidStageDrop);
}
public bool AckBookNewConfirm(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBookNewConfirm _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckBookNewConfirm;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckBookNewConfirm, Common.AckBookNewConfirm);
}

public bool AckBookNewConfirm(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBookNewConfirm _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckBookNewConfirm;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckBookNewConfirm, Common.AckBookNewConfirm);
}
public bool AckTimeAtkRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckTimeAtkRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckTimeAtkRankingList, Common.AckTimeAtkRankingList);
}

public bool AckTimeAtkRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckTimeAtkRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckTimeAtkRankingList, Common.AckTimeAtkRankingList);
}
public bool AckTimeAtkRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckTimeAtkRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckTimeAtkRankerDetail, Common.AckTimeAtkRankerDetail);
}

public bool AckTimeAtkRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTimeAtkRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckTimeAtkRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckTimeAtkRankerDetail, Common.AckTimeAtkRankerDetail);
}
public bool AckInitRaidSeasonData(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoInitRaidSeasonData _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckInitRaidSeasonData;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckInitRaidSeasonData, Common.AckInitRaidSeasonData);
}

public bool AckInitRaidSeasonData(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoInitRaidSeasonData _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckInitRaidSeasonData;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckInitRaidSeasonData, Common.AckInitRaidSeasonData);
}
public bool AckRaidRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidRankingList, Common.AckRaidRankingList);
}

public bool AckRaidRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidRankingList, Common.AckRaidRankingList);
}
public bool AckRaidRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidRankerDetail, Common.AckRaidRankerDetail);
}

public bool AckRaidRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidRankerDetail, Common.AckRaidRankerDetail);
}
public bool AckRaidFirstRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidFirstRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidFirstRankingList, Common.AckRaidFirstRankingList);
}

public bool AckRaidFirstRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankStageList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidFirstRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidFirstRankingList, Common.AckRaidFirstRankingList);
}
public bool AckRaidFirstRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckRaidFirstRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckRaidFirstRankerDetail, Common.AckRaidFirstRankerDetail);
}

public bool AckRaidFirstRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRaidRankerDetailAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckRaidFirstRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckRaidFirstRankerDetail, Common.AckRaidFirstRankerDetail);
}
public bool AckSetRaidTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserRaidTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetRaidTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetRaidTeam, Common.AckSetRaidTeam);
}

public bool AckSetRaidTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserRaidTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetRaidTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetRaidTeam, Common.AckSetRaidTeam);
}
public bool AckArenaSeasonPlay(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaRec _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaSeasonPlay;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaSeasonPlay, Common.AckArenaSeasonPlay);
}

public bool AckArenaSeasonPlay(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaRec _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaSeasonPlay;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaSeasonPlay, Common.AckArenaSeasonPlay);
}
public bool AckSetArenaTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetArenaTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetArenaTeam, Common.AckSetArenaTeam);
}

public bool AckSetArenaTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetArenaTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetArenaTeam, Common.AckSetArenaTeam);
}
public bool AckArenaGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaGameStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaGameStart, Common.AckArenaGameStart);
}

public bool AckArenaGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaGameStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaGameStart, Common.AckArenaGameStart);
}
public bool AckArenaGameEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameEndAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaGameEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaGameEnd, Common.AckArenaGameEnd);
}

public bool AckArenaGameEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaGameEndAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaGameEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaGameEnd, Common.AckArenaGameEnd);
}
public bool AckArenaEnemySearch(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaSearchEnemyAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaEnemySearch;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaEnemySearch, Common.AckArenaEnemySearch);
}

public bool AckArenaEnemySearch(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaSearchEnemyAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaEnemySearch;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaEnemySearch, Common.AckArenaEnemySearch);
}
public bool AckArenaRankingList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaRankList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaRankingList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaRankingList, Common.AckArenaRankingList);
}

public bool AckArenaRankingList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaRankList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaRankingList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaRankingList, Common.AckArenaRankingList);
}
public bool AckArenaRankerDetail(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaDetail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaRankerDetail;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaRankerDetail, Common.AckArenaRankerDetail);
}

public bool AckArenaRankerDetail(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaDetail _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaRankerDetail;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaRankerDetail, Common.AckArenaRankerDetail);
}
public bool AckSetArenaTowerTeam(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetArenaTowerTeam;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetArenaTowerTeam, Common.AckSetArenaTowerTeam);
}

public bool AckSetArenaTowerTeam(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserArenaTeam _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetArenaTowerTeam;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetArenaTowerTeam, Common.AckSetArenaTowerTeam);
}
public bool AckArenaTowerGameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaTowerGameStart;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaTowerGameStart, Common.AckArenaTowerGameStart);
}

public bool AckArenaTowerGameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameStartAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaTowerGameStart;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaTowerGameStart, Common.AckArenaTowerGameStart);
}
public bool AckArenaTowerGameEnd(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameEndAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckArenaTowerGameEnd;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckArenaTowerGameEnd, Common.AckArenaTowerGameEnd);
}

public bool AckArenaTowerGameEnd(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoArenaTowerGameEndAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckArenaTowerGameEnd;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckArenaTowerGameEnd, Common.AckArenaTowerGameEnd);
}
public bool AckUnexpectedPackageDailyReward(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackageDailyRewardAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUnexpectedPackageDailyReward;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUnexpectedPackageDailyReward, Common.AckUnexpectedPackageDailyReward);
}

public bool AckUnexpectedPackageDailyReward(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackageDailyRewardAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUnexpectedPackageDailyReward;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUnexpectedPackageDailyReward, Common.AckUnexpectedPackageDailyReward);
}
public bool AckCharLvUnexpectedPackageHardOpen(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackage _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCharLvUnexpectedPackageHardOpen;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCharLvUnexpectedPackageHardOpen, Common.AckCharLvUnexpectedPackageHardOpen);
}

public bool AckCharLvUnexpectedPackageHardOpen(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUnexpectedPackage _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCharLvUnexpectedPackageHardOpen;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCharLvUnexpectedPackageHardOpen, Common.AckCharLvUnexpectedPackageHardOpen);
}
public bool AckAccountDelete(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAccountDelete _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAccountDelete;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAccountDelete, Common.AckAccountDelete);
}

public bool AckAccountDelete(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAccountDelete _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAccountDelete;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAccountDelete, Common.AckAccountDelete);
}
public bool AckGetUserPresetList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGetUserPresetList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGetUserPresetList, Common.AckGetUserPresetList);
}

public bool AckGetUserPresetList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGetUserPresetList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGetUserPresetList, Common.AckGetUserPresetList);
}
public bool AckAddOrUpdateUserPreset(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAddOrUpdateUserPreset;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAddOrUpdateUserPreset, Common.AckAddOrUpdateUserPreset);
}

public bool AckAddOrUpdateUserPreset(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAddOrUpdateUserPreset;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAddOrUpdateUserPreset, Common.AckAddOrUpdateUserPreset);
}
public bool AckUserPresetLoad(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserPresetLoad _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUserPresetLoad;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUserPresetLoad, Common.AckUserPresetLoad);
}

public bool AckUserPresetLoad(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserPresetLoad _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUserPresetLoad;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUserPresetLoad, Common.AckUserPresetLoad);
}
public bool AckUserPresetChangeName(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUserPresetChangeName;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUserPresetChangeName, Common.AckUserPresetChangeName);
}

public bool AckUserPresetChangeName(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUserPreset.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUserPresetChangeName;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUserPresetChangeName, Common.AckUserPresetChangeName);
}
public bool AckCircleOpen(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleOpenAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleOpen;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleOpen, Common.AckCircleOpen);
}

public bool AckCircleOpen(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleOpenAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleOpen;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleOpen, Common.AckCircleOpen);
}
public bool AckSuggestCircleList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGetSuggestCircleAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSuggestCircleList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSuggestCircleList, Common.AckSuggestCircleList);
}

public bool AckSuggestCircleList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGetSuggestCircleAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSuggestCircleList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSuggestCircleList, Common.AckSuggestCircleList);
}
public bool AckCircleJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGetSuggestCircleAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleJoin;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleJoin, Common.AckCircleJoin);
}

public bool AckCircleJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGetSuggestCircleAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleJoin;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleJoin, Common.AckCircleJoin);
}
public bool AckCircleJoinCancel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _circleID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleJoinCancel;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _circleID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleJoinCancel, Common.AckCircleJoinCancel);
}

public bool AckCircleJoinCancel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _circleID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleJoinCancel;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _circleID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleJoinCancel, Common.AckCircleJoinCancel);
}
public bool AckCircleLobbyInfo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleLobby _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleLobbyInfo;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleLobbyInfo, Common.AckCircleLobbyInfo);
}

public bool AckCircleLobbyInfo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleLobby _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleLobbyInfo;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleLobbyInfo, Common.AckCircleLobbyInfo);
}
public bool AckCircleWithdrawal(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleWithdrawalAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleWithdrawal;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleWithdrawal, Common.AckCircleWithdrawal);
}

public bool AckCircleWithdrawal(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleWithdrawalAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleWithdrawal;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleWithdrawal, Common.AckCircleWithdrawal);
}
public bool AckCircleDisperse(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoTime _activeNextJoinDate)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleDisperse;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _activeNextJoinDate);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleDisperse, Common.AckCircleDisperse);
}

public bool AckCircleDisperse(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoTime _activeNextJoinDate)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleDisperse;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _activeNextJoinDate);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleDisperse, Common.AckCircleDisperse);
}
public bool AckGetCircleUserList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckGetCircleUserList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckGetCircleUserList, Common.AckGetCircleUserList);
}

public bool AckGetCircleUserList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckGetCircleUserList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckGetCircleUserList, Common.AckGetCircleUserList);
}
public bool AckCircleChangeStateJoinWaitUser(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeStateJoinWaitUser;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeStateJoinWaitUser, Common.AckCircleChangeStateJoinWaitUser);
}

public bool AckCircleChangeStateJoinWaitUser(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeStateJoinWaitUser;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeStateJoinWaitUser, Common.AckCircleChangeStateJoinWaitUser);
}
public bool NotiCircleAcceptJoin(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCircleAcceptJoin;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCircleAcceptJoin, Common.NotiCircleAcceptJoin);
}

public bool NotiCircleAcceptJoin(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCircleAcceptJoin;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCircleAcceptJoin, Common.NotiCircleAcceptJoin);
}
public bool AckCircleUserKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserKickAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleUserKick;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleUserKick, Common.AckCircleUserKick);
}

public bool AckCircleUserKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleUserKickAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleUserKick;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleUserKick, Common.AckCircleUserKick);
}
public bool NotiCircleUserKick(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleWithdrawalAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCircleUserKick;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCircleUserKick, Common.NotiCircleUserKick);
}

public bool NotiCircleUserKick(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleWithdrawalAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCircleUserKick;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCircleUserKick, Common.NotiCircleUserKick);
}
public bool AckCircleChangeAuthLevel(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeAuthLevel;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeAuthLevel, Common.AckCircleChangeAuthLevel);
}

public bool AckCircleChangeAuthLevel(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeAuthority _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeAuthLevel;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeAuthLevel, Common.AckCircleChangeAuthLevel);
}
public bool NotiCircleUserChangeAuth(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, eCircleAuthLevel _authLevel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCircleUserChangeAuth;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _authLevel);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCircleUserChangeAuth, Common.NotiCircleUserChangeAuth);
}

public bool NotiCircleUserChangeAuth(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, eCircleAuthLevel _authLevel)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCircleUserChangeAuth;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _authLevel);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCircleUserChangeAuth, Common.NotiCircleUserChangeAuth);
}
public bool AckCircleChangeMark(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleMarkSet _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeMark;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeMark, Common.AckCircleChangeMark);
}

public bool AckCircleChangeMark(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleMarkSet _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeMark;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeMark, Common.AckCircleChangeMark);
}
public bool AckCircleChangeName(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeName _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeName;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeName, Common.AckCircleChangeName);
}

public bool AckCircleChangeName(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChangeName _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeName;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeName, Common.AckCircleChangeName);
}
public bool AckCircleChangeComment(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeComment;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeComment, Common.AckCircleChangeComment);
}

public bool AckCircleChangeComment(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoStr _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeComment;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeComment, Common.AckCircleChangeComment);
}
public bool AckCircleChangeMainLanguage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _changeLang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeMainLanguage;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _changeLang);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeMainLanguage, Common.AckCircleChangeMainLanguage);
}

public bool AckCircleChangeMainLanguage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, eLANGUAGE _changeLang)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeMainLanguage;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _changeLang);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeMainLanguage, Common.AckCircleChangeMainLanguage);
}
public bool AckCircleChangeSuggestAnotherLangOpt(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, bool _state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChangeSuggestAnotherLangOpt;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _state);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChangeSuggestAnotherLangOpt, Common.AckCircleChangeSuggestAnotherLangOpt);
}

public bool AckCircleChangeSuggestAnotherLangOpt(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, bool _state)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChangeSuggestAnotherLangOpt;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _state);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChangeSuggestAnotherLangOpt, Common.AckCircleChangeSuggestAnotherLangOpt);
}
public bool AckCircleAttendance(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleAttendanceRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleAttendance;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleAttendance, Common.AckCircleAttendance);
}

public bool AckCircleAttendance(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleAttendanceRwd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleAttendance;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleAttendance, Common.AckCircleAttendance);
}
public bool AckCircleBuyMarkItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleBuyMarkItem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleBuyMarkItem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleBuyMarkItem, Common.AckCircleBuyMarkItem);
}

public bool AckCircleBuyMarkItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleBuyMarkItem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleBuyMarkItem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleBuyMarkItem, Common.AckCircleBuyMarkItem);
}
public bool NotiCircleChat(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCircleChat;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCircleChat, Common.NotiCircleChat);
}

public bool NotiCircleChat(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCircleChat;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCircleChat, Common.NotiCircleChat);
}
public bool AckCircleGetMarkList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGetCircleMarkList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleGetMarkList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleGetMarkList, Common.AckCircleGetMarkList);
}

public bool AckCircleGetMarkList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGetCircleMarkList _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleGetMarkList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleGetMarkList, Common.AckCircleGetMarkList);
}
public bool AckCircleSearch(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleSimple.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleSearch;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleSearch, Common.AckCircleSearch);
}

public bool AckCircleSearch(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleSimple.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleSearch;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleSearch, Common.AckCircleSearch);
}
public bool AckCircleChatList(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckCircleChatList;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckCircleChatList, Common.AckCircleChatList);
}

public bool AckCircleChatList(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleChat _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckCircleChatList;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckCircleChatList, Common.AckCircleChatList);
}
public bool NotiCircleChatNotimessage(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCircleNotification.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NotiCircleChatNotimessage;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NotiCircleChatNotimessage, Common.NotiCircleChatNotimessage);
}

public bool NotiCircleChatNotimessage(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCircleNotification.Piece _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NotiCircleChatNotimessage;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NotiCircleChatNotimessage, Common.NotiCircleChatNotimessage);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotiSvrReloadTableInfo="NotiSvrReloadTableInfo";
public const string RmiName_NotiCloseServTime="NotiCloseServTime";
public const string RmiName_NotiCommonErr="NotiCommonErr";
public const string RmiName_NotiEmbargoWordErr="NotiEmbargoWordErr";
public const string RmiName_NotiCheckVersionErr="NotiCheckVersionErr";
public const string RmiName_NotiMoveUserInSvrToSvr="NotiMoveUserInSvrToSvr";
public const string RmiName_NotiUpdateTicket="NotiUpdateTicket";
public const string RmiName_NotiUserMarkTake="NotiUserMarkTake";
public const string RmiName_NotiAddMail="NotiAddMail";
public const string RmiName_NotiUpdateAchieve="NotiUpdateAchieve";
public const string RmiName_NotiUpdateAchieveEvent="NotiUpdateAchieveEvent";
public const string RmiName_NotiSetSvrRotationGacha="NotiSetSvrRotationGacha";
public const string RmiName_NotiSetSvrSecretQuestOpt="NotiSetSvrSecretQuestOpt";
public const string RmiName_NotiUpdateDailyMission="NotiUpdateDailyMission";
public const string RmiName_NotiResetWeekMission="NotiResetWeekMission";
public const string RmiName_NotiUpdateWeekMission="NotiUpdateWeekMission";
public const string RmiName_NotiUpdateInfluMission="NotiUpdateInfluMission";
public const string RmiName_NotiUserInfluMissionChange="NotiUserInfluMissionChange";
public const string RmiName_NotiUpdateGllaMission="NotiUpdateGllaMission";
public const string RmiName_NotiUpdatePassMission="NotiUpdatePassMission";
public const string RmiName_NotiUserPassChange="NotiUserPassChange";
public const string RmiName_NotiUserEventChange="NotiUserEventChange";
public const string RmiName_NotiUpdateArenaTime="NotiUpdateArenaTime";
public const string RmiName_NotiUpdateRaidTime="NotiUpdateRaidTime";
public const string RmiName_NotiUpdateRaidInitStart="NotiUpdateRaidInitStart";
public const string RmiName_NotiCommunityUserArenaOn="NotiCommunityUserArenaOn";
public const string RmiName_NotiCommunityUserCallCnt="NotiCommunityUserCallCnt";
public const string RmiName_NotiCommunitySetArenaTowerID="NotiCommunitySetArenaTowerID";
public const string RmiName_NotiFriendFromAdd="NotiFriendFromAdd";
public const string RmiName_NotiFriendFromDel="NotiFriendFromDel";
public const string RmiName_NotiFriendAnswer="NotiFriendAnswer";
public const string RmiName_NotiFriendKick="NotiFriendKick";
public const string RmiName_NotiFriendFlagUpdate="NotiFriendFlagUpdate";
public const string RmiName_AckPing="AckPing";
public const string RmiName_AckLogOnCreditKey="AckLogOnCreditKey";
public const string RmiName_AckLogOut="AckLogOut";
public const string RmiName_AckGetTotlaRelocateCntToNotComplete="AckGetTotlaRelocateCntToNotComplete";
public const string RmiName_AckRelocateUserInfoSet="AckRelocateUserInfoSet";
public const string RmiName_AckRelocateUserComplate="AckRelocateUserComplate";
public const string RmiName_AckRefrashUserInfo="AckRefrashUserInfo";
public const string RmiName_AckReConnectUserInfo="AckReConnectUserInfo";
public const string RmiName_AckAccountCode="AckAccountCode";
public const string RmiName_AckAccountSetPassword="AckAccountSetPassword";
public const string RmiName_AckAccountCodeReward="AckAccountCodeReward";
public const string RmiName_AckAccountLinkReward="AckAccountLinkReward";
public const string RmiName_AckLinkAccountList="AckLinkAccountList";
public const string RmiName_AckAddLinkAccountAuth="AckAddLinkAccountAuth";
public const string RmiName_AckGetUserInfoFromAccountLink="AckGetUserInfoFromAccountLink";
public const string RmiName_AckPushNotifiTokenSet="AckPushNotifiTokenSet";
public const string RmiName_AckReflashLoginBonus="AckReflashLoginBonus";
public const string RmiName_AckRewardTakeAchieve="AckRewardTakeAchieve";
public const string RmiName_AckRewardTakeAchieveEvent="AckRewardTakeAchieveEvent";
public const string RmiName_AckRewardDailyMission="AckRewardDailyMission";
public const string RmiName_AckRewardWeekMission="AckRewardWeekMission";
public const string RmiName_AckRewardInfluMission="AckRewardInfluMission";
public const string RmiName_AckUpdateGllaMission="AckUpdateGllaMission";
public const string RmiName_AckRewardGllaMission="AckRewardGllaMission";
public const string RmiName_AckRewardPassMission="AckRewardPassMission";
public const string RmiName_AckRewardPass="AckRewardPass";
public const string RmiName_AckEventRewardReset="AckEventRewardReset";
public const string RmiName_AckEventRewardTake="AckEventRewardTake";
public const string RmiName_AckEventLgnRewardTake="AckEventLgnRewardTake";
public const string RmiName_AckSetTutorialVal="AckSetTutorialVal";
public const string RmiName_AckSetTutorialFlag="AckSetTutorialFlag";
public const string RmiName_AckAddCharacter="AckAddCharacter";
public const string RmiName_AckChangePreferenceNum="AckChangePreferenceNum";
public const string RmiName_AckChangeMainChar="AckChangeMainChar";
public const string RmiName_AckGradeUpChar="AckGradeUpChar";
public const string RmiName_AckSetGradeLvChar="AckSetGradeLvChar";
public const string RmiName_AckSetMainCostumeChar="AckSetMainCostumeChar";
public const string RmiName_AckRandomCostumeDyeing="AckRandomCostumeDyeing";
public const string RmiName_AckSetCostumeDyeing="AckSetCostumeDyeing";
public const string RmiName_AckCostumeDyeingLock="AckCostumeDyeingLock";
public const string RmiName_AckUserCostumeColor="AckUserCostumeColor";
public const string RmiName_AckEquipWeaponChar="AckEquipWeaponChar";
public const string RmiName_AckApplySkillInChar="AckApplySkillInChar";
public const string RmiName_AckLvUpSkill="AckLvUpSkill";
public const string RmiName_AckLvUpUserSkill="AckLvUpUserSkill";
public const string RmiName_AckResetUserSkill="AckResetUserSkill";
public const string RmiName_AckGivePresentChar="AckGivePresentChar";
public const string RmiName_AckResetSecretCntChar="AckResetSecretCntChar";
public const string RmiName_AckRaidHPRestore="AckRaidHPRestore";
public const string RmiName_AckStageStart="AckStageStart";
public const string RmiName_AckStageEnd="AckStageEnd";
public const string RmiName_AckStageEndFail="AckStageEndFail";
public const string RmiName_AckStageContinue="AckStageContinue";
public const string RmiName_AckRaidStageDrop="AckRaidStageDrop";
public const string RmiName_AckBookNewConfirm="AckBookNewConfirm";
public const string RmiName_AckTimeAtkRankingList="AckTimeAtkRankingList";
public const string RmiName_AckTimeAtkRankerDetail="AckTimeAtkRankerDetail";
public const string RmiName_AckInitRaidSeasonData="AckInitRaidSeasonData";
public const string RmiName_AckRaidRankingList="AckRaidRankingList";
public const string RmiName_AckRaidRankerDetail="AckRaidRankerDetail";
public const string RmiName_AckRaidFirstRankingList="AckRaidFirstRankingList";
public const string RmiName_AckRaidFirstRankerDetail="AckRaidFirstRankerDetail";
public const string RmiName_AckSetRaidTeam="AckSetRaidTeam";
public const string RmiName_AckArenaSeasonPlay="AckArenaSeasonPlay";
public const string RmiName_AckSetArenaTeam="AckSetArenaTeam";
public const string RmiName_AckArenaGameStart="AckArenaGameStart";
public const string RmiName_AckArenaGameEnd="AckArenaGameEnd";
public const string RmiName_AckArenaEnemySearch="AckArenaEnemySearch";
public const string RmiName_AckArenaRankingList="AckArenaRankingList";
public const string RmiName_AckArenaRankerDetail="AckArenaRankerDetail";
public const string RmiName_AckSetArenaTowerTeam="AckSetArenaTowerTeam";
public const string RmiName_AckArenaTowerGameStart="AckArenaTowerGameStart";
public const string RmiName_AckArenaTowerGameEnd="AckArenaTowerGameEnd";
public const string RmiName_AckUnexpectedPackageDailyReward="AckUnexpectedPackageDailyReward";
public const string RmiName_AckCharLvUnexpectedPackageHardOpen="AckCharLvUnexpectedPackageHardOpen";
public const string RmiName_AckAccountDelete="AckAccountDelete";
public const string RmiName_AckGetUserPresetList="AckGetUserPresetList";
public const string RmiName_AckAddOrUpdateUserPreset="AckAddOrUpdateUserPreset";
public const string RmiName_AckUserPresetLoad="AckUserPresetLoad";
public const string RmiName_AckUserPresetChangeName="AckUserPresetChangeName";
public const string RmiName_AckCircleOpen="AckCircleOpen";
public const string RmiName_AckSuggestCircleList="AckSuggestCircleList";
public const string RmiName_AckCircleJoin="AckCircleJoin";
public const string RmiName_AckCircleJoinCancel="AckCircleJoinCancel";
public const string RmiName_AckCircleLobbyInfo="AckCircleLobbyInfo";
public const string RmiName_AckCircleWithdrawal="AckCircleWithdrawal";
public const string RmiName_AckCircleDisperse="AckCircleDisperse";
public const string RmiName_AckGetCircleUserList="AckGetCircleUserList";
public const string RmiName_AckCircleChangeStateJoinWaitUser="AckCircleChangeStateJoinWaitUser";
public const string RmiName_NotiCircleAcceptJoin="NotiCircleAcceptJoin";
public const string RmiName_AckCircleUserKick="AckCircleUserKick";
public const string RmiName_NotiCircleUserKick="NotiCircleUserKick";
public const string RmiName_AckCircleChangeAuthLevel="AckCircleChangeAuthLevel";
public const string RmiName_NotiCircleUserChangeAuth="NotiCircleUserChangeAuth";
public const string RmiName_AckCircleChangeMark="AckCircleChangeMark";
public const string RmiName_AckCircleChangeName="AckCircleChangeName";
public const string RmiName_AckCircleChangeComment="AckCircleChangeComment";
public const string RmiName_AckCircleChangeMainLanguage="AckCircleChangeMainLanguage";
public const string RmiName_AckCircleChangeSuggestAnotherLangOpt="AckCircleChangeSuggestAnotherLangOpt";
public const string RmiName_AckCircleAttendance="AckCircleAttendance";
public const string RmiName_AckCircleBuyMarkItem="AckCircleBuyMarkItem";
public const string RmiName_NotiCircleChat="NotiCircleChat";
public const string RmiName_AckCircleGetMarkList="AckCircleGetMarkList";
public const string RmiName_AckCircleSearch="AckCircleSearch";
public const string RmiName_AckCircleChatList="AckCircleChatList";
public const string RmiName_NotiCircleChatNotimessage="NotiCircleChatNotimessage";
       
public const string RmiName_First = RmiName_NotiSvrReloadTableInfo;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_NotiSvrReloadTableInfo="";
public const string RmiName_NotiCloseServTime="";
public const string RmiName_NotiCommonErr="";
public const string RmiName_NotiEmbargoWordErr="";
public const string RmiName_NotiCheckVersionErr="";
public const string RmiName_NotiMoveUserInSvrToSvr="";
public const string RmiName_NotiUpdateTicket="";
public const string RmiName_NotiUserMarkTake="";
public const string RmiName_NotiAddMail="";
public const string RmiName_NotiUpdateAchieve="";
public const string RmiName_NotiUpdateAchieveEvent="";
public const string RmiName_NotiSetSvrRotationGacha="";
public const string RmiName_NotiSetSvrSecretQuestOpt="";
public const string RmiName_NotiUpdateDailyMission="";
public const string RmiName_NotiResetWeekMission="";
public const string RmiName_NotiUpdateWeekMission="";
public const string RmiName_NotiUpdateInfluMission="";
public const string RmiName_NotiUserInfluMissionChange="";
public const string RmiName_NotiUpdateGllaMission="";
public const string RmiName_NotiUpdatePassMission="";
public const string RmiName_NotiUserPassChange="";
public const string RmiName_NotiUserEventChange="";
public const string RmiName_NotiUpdateArenaTime="";
public const string RmiName_NotiUpdateRaidTime="";
public const string RmiName_NotiUpdateRaidInitStart="";
public const string RmiName_NotiCommunityUserArenaOn="";
public const string RmiName_NotiCommunityUserCallCnt="";
public const string RmiName_NotiCommunitySetArenaTowerID="";
public const string RmiName_NotiFriendFromAdd="";
public const string RmiName_NotiFriendFromDel="";
public const string RmiName_NotiFriendAnswer="";
public const string RmiName_NotiFriendKick="";
public const string RmiName_NotiFriendFlagUpdate="";
public const string RmiName_AckPing="";
public const string RmiName_AckLogOnCreditKey="";
public const string RmiName_AckLogOut="";
public const string RmiName_AckGetTotlaRelocateCntToNotComplete="";
public const string RmiName_AckRelocateUserInfoSet="";
public const string RmiName_AckRelocateUserComplate="";
public const string RmiName_AckRefrashUserInfo="";
public const string RmiName_AckReConnectUserInfo="";
public const string RmiName_AckAccountCode="";
public const string RmiName_AckAccountSetPassword="";
public const string RmiName_AckAccountCodeReward="";
public const string RmiName_AckAccountLinkReward="";
public const string RmiName_AckLinkAccountList="";
public const string RmiName_AckAddLinkAccountAuth="";
public const string RmiName_AckGetUserInfoFromAccountLink="";
public const string RmiName_AckPushNotifiTokenSet="";
public const string RmiName_AckReflashLoginBonus="";
public const string RmiName_AckRewardTakeAchieve="";
public const string RmiName_AckRewardTakeAchieveEvent="";
public const string RmiName_AckRewardDailyMission="";
public const string RmiName_AckRewardWeekMission="";
public const string RmiName_AckRewardInfluMission="";
public const string RmiName_AckUpdateGllaMission="";
public const string RmiName_AckRewardGllaMission="";
public const string RmiName_AckRewardPassMission="";
public const string RmiName_AckRewardPass="";
public const string RmiName_AckEventRewardReset="";
public const string RmiName_AckEventRewardTake="";
public const string RmiName_AckEventLgnRewardTake="";
public const string RmiName_AckSetTutorialVal="";
public const string RmiName_AckSetTutorialFlag="";
public const string RmiName_AckAddCharacter="";
public const string RmiName_AckChangePreferenceNum="";
public const string RmiName_AckChangeMainChar="";
public const string RmiName_AckGradeUpChar="";
public const string RmiName_AckSetGradeLvChar="";
public const string RmiName_AckSetMainCostumeChar="";
public const string RmiName_AckRandomCostumeDyeing="";
public const string RmiName_AckSetCostumeDyeing="";
public const string RmiName_AckCostumeDyeingLock="";
public const string RmiName_AckUserCostumeColor="";
public const string RmiName_AckEquipWeaponChar="";
public const string RmiName_AckApplySkillInChar="";
public const string RmiName_AckLvUpSkill="";
public const string RmiName_AckLvUpUserSkill="";
public const string RmiName_AckResetUserSkill="";
public const string RmiName_AckGivePresentChar="";
public const string RmiName_AckResetSecretCntChar="";
public const string RmiName_AckRaidHPRestore="";
public const string RmiName_AckStageStart="";
public const string RmiName_AckStageEnd="";
public const string RmiName_AckStageEndFail="";
public const string RmiName_AckStageContinue="";
public const string RmiName_AckRaidStageDrop="";
public const string RmiName_AckBookNewConfirm="";
public const string RmiName_AckTimeAtkRankingList="";
public const string RmiName_AckTimeAtkRankerDetail="";
public const string RmiName_AckInitRaidSeasonData="";
public const string RmiName_AckRaidRankingList="";
public const string RmiName_AckRaidRankerDetail="";
public const string RmiName_AckRaidFirstRankingList="";
public const string RmiName_AckRaidFirstRankerDetail="";
public const string RmiName_AckSetRaidTeam="";
public const string RmiName_AckArenaSeasonPlay="";
public const string RmiName_AckSetArenaTeam="";
public const string RmiName_AckArenaGameStart="";
public const string RmiName_AckArenaGameEnd="";
public const string RmiName_AckArenaEnemySearch="";
public const string RmiName_AckArenaRankingList="";
public const string RmiName_AckArenaRankerDetail="";
public const string RmiName_AckSetArenaTowerTeam="";
public const string RmiName_AckArenaTowerGameStart="";
public const string RmiName_AckArenaTowerGameEnd="";
public const string RmiName_AckUnexpectedPackageDailyReward="";
public const string RmiName_AckCharLvUnexpectedPackageHardOpen="";
public const string RmiName_AckAccountDelete="";
public const string RmiName_AckGetUserPresetList="";
public const string RmiName_AckAddOrUpdateUserPreset="";
public const string RmiName_AckUserPresetLoad="";
public const string RmiName_AckUserPresetChangeName="";
public const string RmiName_AckCircleOpen="";
public const string RmiName_AckSuggestCircleList="";
public const string RmiName_AckCircleJoin="";
public const string RmiName_AckCircleJoinCancel="";
public const string RmiName_AckCircleLobbyInfo="";
public const string RmiName_AckCircleWithdrawal="";
public const string RmiName_AckCircleDisperse="";
public const string RmiName_AckGetCircleUserList="";
public const string RmiName_AckCircleChangeStateJoinWaitUser="";
public const string RmiName_NotiCircleAcceptJoin="";
public const string RmiName_AckCircleUserKick="";
public const string RmiName_NotiCircleUserKick="";
public const string RmiName_AckCircleChangeAuthLevel="";
public const string RmiName_NotiCircleUserChangeAuth="";
public const string RmiName_AckCircleChangeMark="";
public const string RmiName_AckCircleChangeName="";
public const string RmiName_AckCircleChangeComment="";
public const string RmiName_AckCircleChangeMainLanguage="";
public const string RmiName_AckCircleChangeSuggestAnotherLangOpt="";
public const string RmiName_AckCircleAttendance="";
public const string RmiName_AckCircleBuyMarkItem="";
public const string RmiName_NotiCircleChat="";
public const string RmiName_AckCircleGetMarkList="";
public const string RmiName_AckCircleSearch="";
public const string RmiName_AckCircleChatList="";
public const string RmiName_NotiCircleChatNotimessage="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace ProductC2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool ReqAddItemSlot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt16 _addCnt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAddItemSlot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _addCnt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAddItemSlot, Common.ReqAddItemSlot);
}

public bool ReqAddItemSlot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt16 _addCnt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAddItemSlot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _addCnt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAddItemSlot, Common.ReqAddItemSlot);
}
public bool ReqApplyPosCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplyPosCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplyPosCard, Common.ReqApplyPosCard);
}

public bool ReqApplyPosCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplyPosCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplyPosCard, Common.ReqApplyPosCard);
}
public bool ReqApplyOutPosCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplyOutPosCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _uid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplyOutPosCard, Common.ReqApplyOutPosCard);
}

public bool ReqApplyOutPosCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.UInt64 _uid)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplyOutPosCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _uid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplyOutPosCard, Common.ReqApplyOutPosCard);
}
public bool ReqSellCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSellCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSellCard, Common.ReqSellCard);
}

public bool ReqSellCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSellCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSellCard, Common.ReqSellCard);
}
public bool ReqSetLockCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetLockCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetLockCard, Common.ReqSetLockCard);
}

public bool ReqSetLockCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetLockCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetLockCard, Common.ReqSetLockCard);
}
public bool ReqChangeTypeCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardTypeChangeReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqChangeTypeCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqChangeTypeCard, Common.ReqChangeTypeCard);
}

public bool ReqChangeTypeCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardTypeChangeReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqChangeTypeCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqChangeTypeCard, Common.ReqChangeTypeCard);
}
public bool ReqLvUpCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLvUpCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLvUpCard, Common.ReqLvUpCard);
}

public bool ReqLvUpCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLvUpCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLvUpCard, Common.ReqLvUpCard);
}
public bool ReqSkillLvUpCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSkillLvUpCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSkillLvUpCard, Common.ReqSkillLvUpCard);
}

public bool ReqSkillLvUpCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSkillLvUpCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSkillLvUpCard, Common.ReqSkillLvUpCard);
}
public bool ReqWakeCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqWakeCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqWakeCard, Common.ReqWakeCard);
}

public bool ReqWakeCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqWakeCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqWakeCard, Common.ReqWakeCard);
}
public bool ReqEnchantCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEnchantCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEnchantCard, Common.ReqEnchantCard);
}

public bool ReqEnchantCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEnchantCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEnchantCard, Common.ReqEnchantCard);
}
public bool ReqFavorLvRewardCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBookOnStateReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqFavorLvRewardCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqFavorLvRewardCard, Common.ReqFavorLvRewardCard);
}

public bool ReqFavorLvRewardCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBookOnStateReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqFavorLvRewardCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqFavorLvRewardCard, Common.ReqFavorLvRewardCard);
}
public bool ReqDecomposition(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoDecompositionReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqDecomposition;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqDecomposition, Common.ReqDecomposition);
}

public bool ReqDecomposition(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoDecompositionReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqDecomposition;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqDecomposition, Common.ReqDecomposition);
}
public bool ReqSellItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoItemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSellItem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSellItem, Common.ReqSellItem);
}

public bool ReqSellItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoItemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSellItem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSellItem, Common.ReqSellItem);
}
public bool ReqItemExchangeCash(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoItemTIDCnt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqItemExchangeCash;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqItemExchangeCash, Common.ReqItemExchangeCash);
}

public bool ReqItemExchangeCash(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoItemTIDCnt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqItemExchangeCash;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqItemExchangeCash, Common.ReqItemExchangeCash);
}
public bool ReqUseItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUseItem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUseItem, Common.ReqUseItem);
}

public bool ReqUseItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUseItem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUseItem, Common.ReqUseItem);
}
public bool ReqUseItemGoods(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoItemCnt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUseItemGoods;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUseItemGoods, Common.ReqUseItemGoods);
}

public bool ReqUseItemGoods(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoItemCnt _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUseItemGoods;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUseItemGoods, Common.ReqUseItemGoods);
}
public bool ReqSellGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSellGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSellGem, Common.ReqSellGem);
}

public bool ReqSellGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSellGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSellGem, Common.ReqSellGem);
}
public bool ReqSetLockGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetLockGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetLockGem, Common.ReqSetLockGem);
}

public bool ReqSetLockGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetLockGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetLockGem, Common.ReqSetLockGem);
}
public bool ReqResetOptGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqResetOptGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqResetOptGem, Common.ReqResetOptGem);
}

public bool ReqResetOptGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqResetOptGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqResetOptGem, Common.ReqResetOptGem);
}
public bool ReqResetOptSelectGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptSelect _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqResetOptSelectGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqResetOptSelectGem, Common.ReqResetOptSelectGem);
}

public bool ReqResetOptSelectGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptSelect _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqResetOptSelectGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqResetOptSelectGem, Common.ReqResetOptSelectGem);
}
public bool ReqLvUpGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLvUpGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLvUpGem, Common.ReqLvUpGem);
}

public bool ReqLvUpGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLvUpGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLvUpGem, Common.ReqLvUpGem);
}
public bool ReqWakeGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqWakeGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqWakeGem, Common.ReqWakeGem);
}

public bool ReqWakeGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqWakeGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqWakeGem, Common.ReqWakeGem);
}
public bool ReqEvolutionGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEvolutionGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEvolutionGem, Common.ReqEvolutionGem);
}

public bool ReqEvolutionGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEvolutionGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEvolutionGem, Common.ReqEvolutionGem);
}
public bool ReqAnalyzeGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAnalyzeGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAnalyzeGem, Common.ReqAnalyzeGem);
}

public bool ReqAnalyzeGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAnalyzeGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAnalyzeGem, Common.ReqAnalyzeGem);
}
public bool ReqSellWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSellWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSellWeapon, Common.ReqSellWeapon);
}

public bool ReqSellWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSellWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSellWeapon, Common.ReqSellWeapon);
}
public bool ReqSetLockWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetLockWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetLockWeapon, Common.ReqSetLockWeapon);
}

public bool ReqSetLockWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetLockWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetLockWeapon, Common.ReqSetLockWeapon);
}
public bool ReqLvUpWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqLvUpWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqLvUpWeapon, Common.ReqLvUpWeapon);
}

public bool ReqLvUpWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqLvUpWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqLvUpWeapon, Common.ReqLvUpWeapon);
}
public bool ReqWakeWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqWakeWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqWakeWeapon, Common.ReqWakeWeapon);
}

public bool ReqWakeWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqWakeWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqWakeWeapon, Common.ReqWakeWeapon);
}
public bool ReqEnchantWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqEnchantWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqEnchantWeapon, Common.ReqEnchantWeapon);
}

public bool ReqEnchantWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqEnchantWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqEnchantWeapon, Common.ReqEnchantWeapon);
}
public bool ReqSkillLvUpWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSkillLvUpWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSkillLvUpWeapon, Common.ReqSkillLvUpWeapon);
}

public bool ReqSkillLvUpWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoProductComGrowReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSkillLvUpWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSkillLvUpWeapon, Common.ReqSkillLvUpWeapon);
}
public bool ReqApplyGemInWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSlotGem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplyGemInWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplyGemInWeapon, Common.ReqApplyGemInWeapon);
}

public bool ReqApplyGemInWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSlotGem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplyGemInWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplyGemInWeapon, Common.ReqApplyGemInWeapon);
}
public bool ReqAddSlotInWpnDepot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.Byte _addCnt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqAddSlotInWpnDepot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _addCnt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqAddSlotInWpnDepot, Common.ReqAddSlotInWpnDepot);
}

public bool ReqAddSlotInWpnDepot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.Byte _addCnt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqAddSlotInWpnDepot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _addCnt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqAddSlotInWpnDepot, Common.ReqAddSlotInWpnDepot);
}
public bool ReqApplySlotInWpnDepot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotApply _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplySlotInWpnDepot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplySlotInWpnDepot, Common.ReqApplySlotInWpnDepot);
}

public bool ReqApplySlotInWpnDepot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotApply _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplySlotInWpnDepot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplySlotInWpnDepot, Common.ReqApplySlotInWpnDepot);
}
public bool ReqApplyPosBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplyPosBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplyPosBadge, Common.ReqApplyPosBadge);
}

public bool ReqApplyPosBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplyPosBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplyPosBadge, Common.ReqApplyPosBadge);
}
public bool ReqApplyOutPosBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqApplyOutPosBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqApplyOutPosBadge, Common.ReqApplyOutPosBadge);
}

public bool ReqApplyOutPosBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqApplyOutPosBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqApplyOutPosBadge, Common.ReqApplyOutPosBadge);
}
public bool ReqSellBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSellBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSellBadge, Common.ReqSellBadge);
}

public bool ReqSellBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSellBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSellBadge, Common.ReqSellBadge);
}
public bool ReqSetLockBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqSetLockBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqSetLockBadge, Common.ReqSetLockBadge);
}

public bool ReqSetLockBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqSetLockBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqSetLockBadge, Common.ReqSetLockBadge);
}
public bool ReqUpgradeBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqUpgradeBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqUpgradeBadge, Common.ReqUpgradeBadge);
}

public bool ReqUpgradeBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqUpgradeBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqUpgradeBadge, Common.ReqUpgradeBadge);
}
public bool ReqResetUpgradeBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ReqResetUpgradeBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ReqResetUpgradeBadge, Common.ReqResetUpgradeBadge);
}

public bool ReqResetUpgradeBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeComReq _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ReqResetUpgradeBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ReqResetUpgradeBadge, Common.ReqResetUpgradeBadge);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReqAddItemSlot="ReqAddItemSlot";
public const string RmiName_ReqApplyPosCard="ReqApplyPosCard";
public const string RmiName_ReqApplyOutPosCard="ReqApplyOutPosCard";
public const string RmiName_ReqSellCard="ReqSellCard";
public const string RmiName_ReqSetLockCard="ReqSetLockCard";
public const string RmiName_ReqChangeTypeCard="ReqChangeTypeCard";
public const string RmiName_ReqLvUpCard="ReqLvUpCard";
public const string RmiName_ReqSkillLvUpCard="ReqSkillLvUpCard";
public const string RmiName_ReqWakeCard="ReqWakeCard";
public const string RmiName_ReqEnchantCard="ReqEnchantCard";
public const string RmiName_ReqFavorLvRewardCard="ReqFavorLvRewardCard";
public const string RmiName_ReqDecomposition="ReqDecomposition";
public const string RmiName_ReqSellItem="ReqSellItem";
public const string RmiName_ReqItemExchangeCash="ReqItemExchangeCash";
public const string RmiName_ReqUseItem="ReqUseItem";
public const string RmiName_ReqUseItemGoods="ReqUseItemGoods";
public const string RmiName_ReqSellGem="ReqSellGem";
public const string RmiName_ReqSetLockGem="ReqSetLockGem";
public const string RmiName_ReqResetOptGem="ReqResetOptGem";
public const string RmiName_ReqResetOptSelectGem="ReqResetOptSelectGem";
public const string RmiName_ReqLvUpGem="ReqLvUpGem";
public const string RmiName_ReqWakeGem="ReqWakeGem";
public const string RmiName_ReqEvolutionGem="ReqEvolutionGem";
public const string RmiName_ReqAnalyzeGem="ReqAnalyzeGem";
public const string RmiName_ReqSellWeapon="ReqSellWeapon";
public const string RmiName_ReqSetLockWeapon="ReqSetLockWeapon";
public const string RmiName_ReqLvUpWeapon="ReqLvUpWeapon";
public const string RmiName_ReqWakeWeapon="ReqWakeWeapon";
public const string RmiName_ReqEnchantWeapon="ReqEnchantWeapon";
public const string RmiName_ReqSkillLvUpWeapon="ReqSkillLvUpWeapon";
public const string RmiName_ReqApplyGemInWeapon="ReqApplyGemInWeapon";
public const string RmiName_ReqAddSlotInWpnDepot="ReqAddSlotInWpnDepot";
public const string RmiName_ReqApplySlotInWpnDepot="ReqApplySlotInWpnDepot";
public const string RmiName_ReqApplyPosBadge="ReqApplyPosBadge";
public const string RmiName_ReqApplyOutPosBadge="ReqApplyOutPosBadge";
public const string RmiName_ReqSellBadge="ReqSellBadge";
public const string RmiName_ReqSetLockBadge="ReqSetLockBadge";
public const string RmiName_ReqUpgradeBadge="ReqUpgradeBadge";
public const string RmiName_ReqResetUpgradeBadge="ReqResetUpgradeBadge";
       
public const string RmiName_First = RmiName_ReqAddItemSlot;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_ReqAddItemSlot="";
public const string RmiName_ReqApplyPosCard="";
public const string RmiName_ReqApplyOutPosCard="";
public const string RmiName_ReqSellCard="";
public const string RmiName_ReqSetLockCard="";
public const string RmiName_ReqChangeTypeCard="";
public const string RmiName_ReqLvUpCard="";
public const string RmiName_ReqSkillLvUpCard="";
public const string RmiName_ReqWakeCard="";
public const string RmiName_ReqEnchantCard="";
public const string RmiName_ReqFavorLvRewardCard="";
public const string RmiName_ReqDecomposition="";
public const string RmiName_ReqSellItem="";
public const string RmiName_ReqItemExchangeCash="";
public const string RmiName_ReqUseItem="";
public const string RmiName_ReqUseItemGoods="";
public const string RmiName_ReqSellGem="";
public const string RmiName_ReqSetLockGem="";
public const string RmiName_ReqResetOptGem="";
public const string RmiName_ReqResetOptSelectGem="";
public const string RmiName_ReqLvUpGem="";
public const string RmiName_ReqWakeGem="";
public const string RmiName_ReqEvolutionGem="";
public const string RmiName_ReqAnalyzeGem="";
public const string RmiName_ReqSellWeapon="";
public const string RmiName_ReqSetLockWeapon="";
public const string RmiName_ReqLvUpWeapon="";
public const string RmiName_ReqWakeWeapon="";
public const string RmiName_ReqEnchantWeapon="";
public const string RmiName_ReqSkillLvUpWeapon="";
public const string RmiName_ReqApplyGemInWeapon="";
public const string RmiName_ReqAddSlotInWpnDepot="";
public const string RmiName_ReqApplySlotInWpnDepot="";
public const string RmiName_ReqApplyPosBadge="";
public const string RmiName_ReqApplyOutPosBadge="";
public const string RmiName_ReqSellBadge="";
public const string RmiName_ReqSetLockBadge="";
public const string RmiName_ReqUpgradeBadge="";
public const string RmiName_ReqResetUpgradeBadge="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}
namespace ProductS2C
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool AckAddItemSlot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoAddSlot _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAddItemSlot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAddItemSlot, Common.AckAddItemSlot);
}

public bool AckAddItemSlot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoAddSlot _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAddItemSlot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAddItemSlot, Common.AckAddItemSlot);
}
public bool AckApplyPosCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplyPosCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplyPosCard, Common.AckApplyPosCard);
}

public bool AckApplyPosCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplyPosCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplyPosCard, Common.AckApplyPosCard);
}
public bool AckApplyOutPosCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyOutPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplyOutPosCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplyOutPosCard, Common.AckApplyOutPosCard);
}

public bool AckApplyOutPosCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardApplyOutPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplyOutPosCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplyOutPosCard, Common.AckApplyOutPosCard);
}
public bool AckSellCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSellCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSellCard, Common.AckSellCard);
}

public bool AckSellCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSellCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSellCard, Common.AckSellCard);
}
public bool AckSetLockCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetLockCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetLockCard, Common.AckSetLockCard);
}

public bool AckSetLockCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetLockCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetLockCard, Common.AckSetLockCard);
}
public bool AckChangeTypeCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardTypeChangeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckChangeTypeCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckChangeTypeCard, Common.AckChangeTypeCard);
}

public bool AckChangeTypeCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardTypeChangeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckChangeTypeCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckChangeTypeCard, Common.AckChangeTypeCard);
}
public bool AckLvUpCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLvUpCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLvUpCard, Common.AckLvUpCard);
}

public bool AckLvUpCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLvUpCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLvUpCard, Common.AckLvUpCard);
}
public bool AckSkillLvUpCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSkillLvUpCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSkillLvUpCard, Common.AckSkillLvUpCard);
}

public bool AckSkillLvUpCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSkillLvUpCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSkillLvUpCard, Common.AckSkillLvUpCard);
}
public bool AckWakeCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckWakeCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckWakeCard, Common.AckWakeCard);
}

public bool AckWakeCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckWakeCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckWakeCard, Common.AckWakeCard);
}
public bool AckEnchantCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEnchantCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEnchantCard, Common.AckEnchantCard);
}

public bool AckEnchantCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoCardGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEnchantCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEnchantCard, Common.AckEnchantCard);
}
public bool AckFavorLvRewardCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBookStateReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckFavorLvRewardCard;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckFavorLvRewardCard, Common.AckFavorLvRewardCard);
}

public bool AckFavorLvRewardCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBookStateReward _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckFavorLvRewardCard;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckFavorLvRewardCard, Common.AckFavorLvRewardCard);
}
public bool AckDecomposition(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoDecompositionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckDecomposition;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckDecomposition, Common.AckDecomposition);
}

public bool AckDecomposition(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoDecompositionAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckDecomposition;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckDecomposition, Common.AckDecomposition);
}
public bool AckSellItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoItemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSellItem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSellItem, Common.AckSellItem);
}

public bool AckSellItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoItemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSellItem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSellItem, Common.AckSellItem);
}
public bool AckItemExchangeCash(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoRwdItemGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckItemExchangeCash;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckItemExchangeCash, Common.AckItemExchangeCash);
}

public bool AckItemExchangeCash(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoRwdItemGoods _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckItemExchangeCash;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckItemExchangeCash, Common.AckItemExchangeCash);
}
public bool AckUseItemGoods(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemGoodsAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUseItemGoods;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUseItemGoods, Common.AckUseItemGoods);
}

public bool AckUseItemGoods(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemGoodsAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUseItemGoods;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUseItemGoods, Common.AckUseItemGoods);
}
public bool AckUseItemProduct(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemProductAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUseItemProduct;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUseItemProduct, Common.AckUseItemProduct);
}

public bool AckUseItemProduct(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemProductAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUseItemProduct;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUseItemProduct, Common.AckUseItemProduct);
}
public bool AckUseItemCode(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemCodeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUseItemCode;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUseItemCode, Common.AckUseItemCode);
}

public bool AckUseItemCode(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemCodeAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUseItemCode;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUseItemCode, Common.AckUseItemCode);
}
public bool AckUseItemStageSpecial(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemStageSpecialAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUseItemStageSpecial;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUseItemStageSpecial, Common.AckUseItemStageSpecial);
}

public bool AckUseItemStageSpecial(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoUseItemStageSpecialAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUseItemStageSpecial;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUseItemStageSpecial, Common.AckUseItemStageSpecial);
}
public bool AckSellGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSellGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSellGem, Common.AckSellGem);
}

public bool AckSellGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSellGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSellGem, Common.AckSellGem);
}
public bool AckSetLockGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetLockGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetLockGem, Common.AckSetLockGem);
}

public bool AckSetLockGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetLockGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetLockGem, Common.AckSetLockGem);
}
public bool AckResetOptGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckResetOptGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckResetOptGem, Common.AckResetOptGem);
}

public bool AckResetOptGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptAck _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckResetOptGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckResetOptGem, Common.AckResetOptGem);
}
public bool AckResetOptSelectGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptSelect _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckResetOptSelectGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckResetOptSelectGem, Common.AckResetOptSelectGem);
}

public bool AckResetOptSelectGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemResetOptSelect _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckResetOptSelectGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckResetOptSelectGem, Common.AckResetOptSelectGem);
}
public bool AckLvUpGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLvUpGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLvUpGem, Common.AckLvUpGem);
}

public bool AckLvUpGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLvUpGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLvUpGem, Common.AckLvUpGem);
}
public bool AckWakeGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckWakeGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckWakeGem, Common.AckWakeGem);
}

public bool AckWakeGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckWakeGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckWakeGem, Common.AckWakeGem);
}
public bool AckEvolutionGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEvolutionGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEvolutionGem, Common.AckEvolutionGem);
}

public bool AckEvolutionGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEvolutionGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEvolutionGem, Common.AckEvolutionGem);
}
public bool AckAnalyzeGem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAnalyzeGem;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAnalyzeGem, Common.AckAnalyzeGem);
}

public bool AckAnalyzeGem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoGemGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAnalyzeGem;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAnalyzeGem, Common.AckAnalyzeGem);
}
public bool AckSellWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSellWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSellWeapon, Common.AckSellWeapon);
}

public bool AckSellWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSellWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSellWeapon, Common.AckSellWeapon);
}
public bool AckSetLockWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetLockWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetLockWeapon, Common.AckSetLockWeapon);
}

public bool AckSetLockWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetLockWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetLockWeapon, Common.AckSetLockWeapon);
}
public bool AckLvUpWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckLvUpWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckLvUpWeapon, Common.AckLvUpWeapon);
}

public bool AckLvUpWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckLvUpWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckLvUpWeapon, Common.AckLvUpWeapon);
}
public bool AckSkillLvUpWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSkillLvUpWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSkillLvUpWeapon, Common.AckSkillLvUpWeapon);
}

public bool AckSkillLvUpWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSkillLvUpWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSkillLvUpWeapon, Common.AckSkillLvUpWeapon);
}
public bool AckWakeWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckWakeWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckWakeWeapon, Common.AckWakeWeapon);
}

public bool AckWakeWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckWakeWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckWakeWeapon, Common.AckWakeWeapon);
}
public bool AckEnchantWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckEnchantWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckEnchantWeapon, Common.AckEnchantWeapon);
}

public bool AckEnchantWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponGrow _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckEnchantWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckEnchantWeapon, Common.AckEnchantWeapon);
}
public bool AckApplyGemInWeapon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSlotGem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplyGemInWeapon;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplyGemInWeapon, Common.AckApplyGemInWeapon);
}

public bool AckApplyGemInWeapon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWeaponSlotGem _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplyGemInWeapon;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplyGemInWeapon, Common.AckApplyGemInWeapon);
}
public bool AckAddSlotInWpnDepot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotSlotAdd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckAddSlotInWpnDepot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckAddSlotInWpnDepot, Common.AckAddSlotInWpnDepot);
}

public bool AckAddSlotInWpnDepot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotSlotAdd _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckAddSlotInWpnDepot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckAddSlotInWpnDepot, Common.AckAddSlotInWpnDepot);
}
public bool AckApplySlotInWpnDepot(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotApply _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplySlotInWpnDepot;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplySlotInWpnDepot, Common.AckApplySlotInWpnDepot);
}

public bool AckApplySlotInWpnDepot(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoWpnDepotApply _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplySlotInWpnDepot;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplySlotInWpnDepot, Common.AckApplySlotInWpnDepot);
}
public bool AckApplyPosBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplyPosBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplyPosBadge, Common.AckApplyPosBadge);
}

public bool AckApplyPosBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplyPosBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplyPosBadge, Common.AckApplyPosBadge);
}
public bool AckApplyOutPosBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyOutPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckApplyOutPosBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckApplyOutPosBadge, Common.AckApplyOutPosBadge);
}

public bool AckApplyOutPosBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeApplyOutPos _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckApplyOutPosBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckApplyOutPosBadge, Common.AckApplyOutPosBadge);
}
public bool AckSellBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSellBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSellBadge, Common.AckSellBadge);
}

public bool AckSellBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeSell _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSellBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSellBadge, Common.AckSellBadge);
}
public bool AckSetLockBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckSetLockBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckSetLockBadge, Common.AckSetLockBadge);
}

public bool AckSetLockBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeLock _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckSetLockBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckSetLockBadge, Common.AckSetLockBadge);
}
public bool AckUpgradeBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeUpgrade _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckUpgradeBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckUpgradeBadge, Common.AckUpgradeBadge);
}

public bool AckUpgradeBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeUpgrade _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckUpgradeBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckUpgradeBadge, Common.AckUpgradeBadge);
}
public bool AckResetUpgradeBadge(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeUpgrade _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AckResetUpgradeBadge;
		__msg.Write(__msgid);
		PN_MarshalerEx.Write(__msg, _pkt);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AckResetUpgradeBadge, Common.AckResetUpgradeBadge);
}

public bool AckResetUpgradeBadge(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, PktInfoBadgeUpgrade _pkt)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AckResetUpgradeBadge;
__msg.Write(__msgid);
PN_MarshalerEx.Write(__msg, _pkt);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AckResetUpgradeBadge, Common.AckResetUpgradeBadge);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_AckAddItemSlot="AckAddItemSlot";
public const string RmiName_AckApplyPosCard="AckApplyPosCard";
public const string RmiName_AckApplyOutPosCard="AckApplyOutPosCard";
public const string RmiName_AckSellCard="AckSellCard";
public const string RmiName_AckSetLockCard="AckSetLockCard";
public const string RmiName_AckChangeTypeCard="AckChangeTypeCard";
public const string RmiName_AckLvUpCard="AckLvUpCard";
public const string RmiName_AckSkillLvUpCard="AckSkillLvUpCard";
public const string RmiName_AckWakeCard="AckWakeCard";
public const string RmiName_AckEnchantCard="AckEnchantCard";
public const string RmiName_AckFavorLvRewardCard="AckFavorLvRewardCard";
public const string RmiName_AckDecomposition="AckDecomposition";
public const string RmiName_AckSellItem="AckSellItem";
public const string RmiName_AckItemExchangeCash="AckItemExchangeCash";
public const string RmiName_AckUseItemGoods="AckUseItemGoods";
public const string RmiName_AckUseItemProduct="AckUseItemProduct";
public const string RmiName_AckUseItemCode="AckUseItemCode";
public const string RmiName_AckUseItemStageSpecial="AckUseItemStageSpecial";
public const string RmiName_AckSellGem="AckSellGem";
public const string RmiName_AckSetLockGem="AckSetLockGem";
public const string RmiName_AckResetOptGem="AckResetOptGem";
public const string RmiName_AckResetOptSelectGem="AckResetOptSelectGem";
public const string RmiName_AckLvUpGem="AckLvUpGem";
public const string RmiName_AckWakeGem="AckWakeGem";
public const string RmiName_AckEvolutionGem="AckEvolutionGem";
public const string RmiName_AckAnalyzeGem="AckAnalyzeGem";
public const string RmiName_AckSellWeapon="AckSellWeapon";
public const string RmiName_AckSetLockWeapon="AckSetLockWeapon";
public const string RmiName_AckLvUpWeapon="AckLvUpWeapon";
public const string RmiName_AckSkillLvUpWeapon="AckSkillLvUpWeapon";
public const string RmiName_AckWakeWeapon="AckWakeWeapon";
public const string RmiName_AckEnchantWeapon="AckEnchantWeapon";
public const string RmiName_AckApplyGemInWeapon="AckApplyGemInWeapon";
public const string RmiName_AckAddSlotInWpnDepot="AckAddSlotInWpnDepot";
public const string RmiName_AckApplySlotInWpnDepot="AckApplySlotInWpnDepot";
public const string RmiName_AckApplyPosBadge="AckApplyPosBadge";
public const string RmiName_AckApplyOutPosBadge="AckApplyOutPosBadge";
public const string RmiName_AckSellBadge="AckSellBadge";
public const string RmiName_AckSetLockBadge="AckSetLockBadge";
public const string RmiName_AckUpgradeBadge="AckUpgradeBadge";
public const string RmiName_AckResetUpgradeBadge="AckResetUpgradeBadge";
       
public const string RmiName_First = RmiName_AckAddItemSlot;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_AckAddItemSlot="";
public const string RmiName_AckApplyPosCard="";
public const string RmiName_AckApplyOutPosCard="";
public const string RmiName_AckSellCard="";
public const string RmiName_AckSetLockCard="";
public const string RmiName_AckChangeTypeCard="";
public const string RmiName_AckLvUpCard="";
public const string RmiName_AckSkillLvUpCard="";
public const string RmiName_AckWakeCard="";
public const string RmiName_AckEnchantCard="";
public const string RmiName_AckFavorLvRewardCard="";
public const string RmiName_AckDecomposition="";
public const string RmiName_AckSellItem="";
public const string RmiName_AckItemExchangeCash="";
public const string RmiName_AckUseItemGoods="";
public const string RmiName_AckUseItemProduct="";
public const string RmiName_AckUseItemCode="";
public const string RmiName_AckUseItemStageSpecial="";
public const string RmiName_AckSellGem="";
public const string RmiName_AckSetLockGem="";
public const string RmiName_AckResetOptGem="";
public const string RmiName_AckResetOptSelectGem="";
public const string RmiName_AckLvUpGem="";
public const string RmiName_AckWakeGem="";
public const string RmiName_AckEvolutionGem="";
public const string RmiName_AckAnalyzeGem="";
public const string RmiName_AckSellWeapon="";
public const string RmiName_AckSetLockWeapon="";
public const string RmiName_AckLvUpWeapon="";
public const string RmiName_AckSkillLvUpWeapon="";
public const string RmiName_AckWakeWeapon="";
public const string RmiName_AckEnchantWeapon="";
public const string RmiName_AckApplyGemInWeapon="";
public const string RmiName_AckAddSlotInWpnDepot="";
public const string RmiName_AckApplySlotInWpnDepot="";
public const string RmiName_AckApplyPosBadge="";
public const string RmiName_AckApplyOutPosBadge="";
public const string RmiName_AckSellBadge="";
public const string RmiName_AckSetLockBadge="";
public const string RmiName_AckUpgradeBadge="";
public const string RmiName_AckResetUpgradeBadge="";
       
public const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

